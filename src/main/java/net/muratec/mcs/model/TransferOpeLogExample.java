package net.muratec.mcs.model;

import java.util.ArrayList;
import java.util.List;

public class TransferOpeLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    public TransferOpeLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTimeIsNull() {
            addCriterion("TIME is null");
            return (Criteria) this;
        }

        public Criteria andTimeIsNotNull() {
            addCriterion("TIME is not null");
            return (Criteria) this;
        }

        public Criteria andTimeEqualTo(String value) {
            addCriterion("TIME =", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotEqualTo(String value) {
            addCriterion("TIME <>", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThan(String value) {
            addCriterion("TIME >", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThanOrEqualTo(String value) {
            addCriterion("TIME >=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThan(String value) {
            addCriterion("TIME <", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThanOrEqualTo(String value) {
            addCriterion("TIME <=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLike(String value) {
            addCriterion("TIME like", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotLike(String value) {
            addCriterion("TIME not like", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeIn(List<String> values) {
            addCriterion("TIME in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotIn(List<String> values) {
            addCriterion("TIME not in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeBetween(String value1, String value2) {
            addCriterion("TIME between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotBetween(String value1, String value2) {
            addCriterion("TIME not between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTscIdIsNull() {
            addCriterion("TSC_ID is null");
            return (Criteria) this;
        }

        public Criteria andTscIdIsNotNull() {
            addCriterion("TSC_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTscIdEqualTo(Integer value) {
            addCriterion("TSC_ID =", value, "tscId");
            return (Criteria) this;
        }

        public Criteria andTscIdNotEqualTo(Integer value) {
            addCriterion("TSC_ID <>", value, "tscId");
            return (Criteria) this;
        }

        public Criteria andTscIdGreaterThan(Integer value) {
            addCriterion("TSC_ID >", value, "tscId");
            return (Criteria) this;
        }

        public Criteria andTscIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TSC_ID >=", value, "tscId");
            return (Criteria) this;
        }

        public Criteria andTscIdLessThan(Integer value) {
            addCriterion("TSC_ID <", value, "tscId");
            return (Criteria) this;
        }

        public Criteria andTscIdLessThanOrEqualTo(Integer value) {
            addCriterion("TSC_ID <=", value, "tscId");
            return (Criteria) this;
        }

        public Criteria andTscIdIn(List<Integer> values) {
            addCriterion("TSC_ID in", values, "tscId");
            return (Criteria) this;
        }

        public Criteria andTscIdNotIn(List<Integer> values) {
            addCriterion("TSC_ID not in", values, "tscId");
            return (Criteria) this;
        }

        public Criteria andTscIdBetween(Integer value1, Integer value2) {
            addCriterion("TSC_ID between", value1, value2, "tscId");
            return (Criteria) this;
        }

        public Criteria andTscIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TSC_ID not between", value1, value2, "tscId");
            return (Criteria) this;
        }

        public Criteria andSrcLocIsNull() {
            addCriterion("SRC_LOC is null");
            return (Criteria) this;
        }

        public Criteria andSrcLocIsNotNull() {
            addCriterion("SRC_LOC is not null");
            return (Criteria) this;
        }

        public Criteria andSrcLocEqualTo(String value) {
            addCriterion("SRC_LOC =", value, "srcLoc");
            return (Criteria) this;
        }

        public Criteria andSrcLocNotEqualTo(String value) {
            addCriterion("SRC_LOC <>", value, "srcLoc");
            return (Criteria) this;
        }

        public Criteria andSrcLocGreaterThan(String value) {
            addCriterion("SRC_LOC >", value, "srcLoc");
            return (Criteria) this;
        }

        public Criteria andSrcLocGreaterThanOrEqualTo(String value) {
            addCriterion("SRC_LOC >=", value, "srcLoc");
            return (Criteria) this;
        }

        public Criteria andSrcLocLessThan(String value) {
            addCriterion("SRC_LOC <", value, "srcLoc");
            return (Criteria) this;
        }

        public Criteria andSrcLocLessThanOrEqualTo(String value) {
            addCriterion("SRC_LOC <=", value, "srcLoc");
            return (Criteria) this;
        }

        public Criteria andSrcLocLike(String value) {
            addCriterion("SRC_LOC like", value, "srcLoc");
            return (Criteria) this;
        }

        public Criteria andSrcLocNotLike(String value) {
            addCriterion("SRC_LOC not like", value, "srcLoc");
            return (Criteria) this;
        }

        public Criteria andSrcLocIn(List<String> values) {
            addCriterion("SRC_LOC in", values, "srcLoc");
            return (Criteria) this;
        }

        public Criteria andSrcLocNotIn(List<String> values) {
            addCriterion("SRC_LOC not in", values, "srcLoc");
            return (Criteria) this;
        }

        public Criteria andSrcLocBetween(String value1, String value2) {
            addCriterion("SRC_LOC between", value1, value2, "srcLoc");
            return (Criteria) this;
        }

        public Criteria andSrcLocNotBetween(String value1, String value2) {
            addCriterion("SRC_LOC not between", value1, value2, "srcLoc");
            return (Criteria) this;
        }

        public Criteria andDstLocIsNull() {
            addCriterion("DST_LOC is null");
            return (Criteria) this;
        }

        public Criteria andDstLocIsNotNull() {
            addCriterion("DST_LOC is not null");
            return (Criteria) this;
        }

        public Criteria andDstLocEqualTo(String value) {
            addCriterion("DST_LOC =", value, "dstLoc");
            return (Criteria) this;
        }

        public Criteria andDstLocNotEqualTo(String value) {
            addCriterion("DST_LOC <>", value, "dstLoc");
            return (Criteria) this;
        }

        public Criteria andDstLocGreaterThan(String value) {
            addCriterion("DST_LOC >", value, "dstLoc");
            return (Criteria) this;
        }

        public Criteria andDstLocGreaterThanOrEqualTo(String value) {
            addCriterion("DST_LOC >=", value, "dstLoc");
            return (Criteria) this;
        }

        public Criteria andDstLocLessThan(String value) {
            addCriterion("DST_LOC <", value, "dstLoc");
            return (Criteria) this;
        }

        public Criteria andDstLocLessThanOrEqualTo(String value) {
            addCriterion("DST_LOC <=", value, "dstLoc");
            return (Criteria) this;
        }

        public Criteria andDstLocLike(String value) {
            addCriterion("DST_LOC like", value, "dstLoc");
            return (Criteria) this;
        }

        public Criteria andDstLocNotLike(String value) {
            addCriterion("DST_LOC not like", value, "dstLoc");
            return (Criteria) this;
        }

        public Criteria andDstLocIn(List<String> values) {
            addCriterion("DST_LOC in", values, "dstLoc");
            return (Criteria) this;
        }

        public Criteria andDstLocNotIn(List<String> values) {
            addCriterion("DST_LOC not in", values, "dstLoc");
            return (Criteria) this;
        }

        public Criteria andDstLocBetween(String value1, String value2) {
            addCriterion("DST_LOC between", value1, value2, "dstLoc");
            return (Criteria) this;
        }

        public Criteria andDstLocNotBetween(String value1, String value2) {
            addCriterion("DST_LOC not between", value1, value2, "dstLoc");
            return (Criteria) this;
        }

        public Criteria andMinTimeIsNull() {
            addCriterion("MIN_TIME is null");
            return (Criteria) this;
        }

        public Criteria andMinTimeIsNotNull() {
            addCriterion("MIN_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andMinTimeEqualTo(Integer value) {
            addCriterion("MIN_TIME =", value, "minTime");
            return (Criteria) this;
        }

        public Criteria andMinTimeNotEqualTo(Integer value) {
            addCriterion("MIN_TIME <>", value, "minTime");
            return (Criteria) this;
        }

        public Criteria andMinTimeGreaterThan(Integer value) {
            addCriterion("MIN_TIME >", value, "minTime");
            return (Criteria) this;
        }

        public Criteria andMinTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("MIN_TIME >=", value, "minTime");
            return (Criteria) this;
        }

        public Criteria andMinTimeLessThan(Integer value) {
            addCriterion("MIN_TIME <", value, "minTime");
            return (Criteria) this;
        }

        public Criteria andMinTimeLessThanOrEqualTo(Integer value) {
            addCriterion("MIN_TIME <=", value, "minTime");
            return (Criteria) this;
        }

        public Criteria andMinTimeIn(List<Integer> values) {
            addCriterion("MIN_TIME in", values, "minTime");
            return (Criteria) this;
        }

        public Criteria andMinTimeNotIn(List<Integer> values) {
            addCriterion("MIN_TIME not in", values, "minTime");
            return (Criteria) this;
        }

        public Criteria andMinTimeBetween(Integer value1, Integer value2) {
            addCriterion("MIN_TIME between", value1, value2, "minTime");
            return (Criteria) this;
        }

        public Criteria andMinTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("MIN_TIME not between", value1, value2, "minTime");
            return (Criteria) this;
        }

        public Criteria andMaxTimeIsNull() {
            addCriterion("MAX_TIME is null");
            return (Criteria) this;
        }

        public Criteria andMaxTimeIsNotNull() {
            addCriterion("MAX_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andMaxTimeEqualTo(Integer value) {
            addCriterion("MAX_TIME =", value, "maxTime");
            return (Criteria) this;
        }

        public Criteria andMaxTimeNotEqualTo(Integer value) {
            addCriterion("MAX_TIME <>", value, "maxTime");
            return (Criteria) this;
        }

        public Criteria andMaxTimeGreaterThan(Integer value) {
            addCriterion("MAX_TIME >", value, "maxTime");
            return (Criteria) this;
        }

        public Criteria andMaxTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("MAX_TIME >=", value, "maxTime");
            return (Criteria) this;
        }

        public Criteria andMaxTimeLessThan(Integer value) {
            addCriterion("MAX_TIME <", value, "maxTime");
            return (Criteria) this;
        }

        public Criteria andMaxTimeLessThanOrEqualTo(Integer value) {
            addCriterion("MAX_TIME <=", value, "maxTime");
            return (Criteria) this;
        }

        public Criteria andMaxTimeIn(List<Integer> values) {
            addCriterion("MAX_TIME in", values, "maxTime");
            return (Criteria) this;
        }

        public Criteria andMaxTimeNotIn(List<Integer> values) {
            addCriterion("MAX_TIME not in", values, "maxTime");
            return (Criteria) this;
        }

        public Criteria andMaxTimeBetween(Integer value1, Integer value2) {
            addCriterion("MAX_TIME between", value1, value2, "maxTime");
            return (Criteria) this;
        }

        public Criteria andMaxTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("MAX_TIME not between", value1, value2, "maxTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeIsNull() {
            addCriterion("TOTAL_TIME is null");
            return (Criteria) this;
        }

        public Criteria andTotalTimeIsNotNull() {
            addCriterion("TOTAL_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andTotalTimeEqualTo(Integer value) {
            addCriterion("TOTAL_TIME =", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeNotEqualTo(Integer value) {
            addCriterion("TOTAL_TIME <>", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeGreaterThan(Integer value) {
            addCriterion("TOTAL_TIME >", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("TOTAL_TIME >=", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeLessThan(Integer value) {
            addCriterion("TOTAL_TIME <", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeLessThanOrEqualTo(Integer value) {
            addCriterion("TOTAL_TIME <=", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeIn(List<Integer> values) {
            addCriterion("TOTAL_TIME in", values, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeNotIn(List<Integer> values) {
            addCriterion("TOTAL_TIME not in", values, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeBetween(Integer value1, Integer value2) {
            addCriterion("TOTAL_TIME between", value1, value2, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("TOTAL_TIME not between", value1, value2, "totalTime");
            return (Criteria) this;
        }

        public Criteria andOpeCountIsNull() {
            addCriterion("OPE_COUNT is null");
            return (Criteria) this;
        }

        public Criteria andOpeCountIsNotNull() {
            addCriterion("OPE_COUNT is not null");
            return (Criteria) this;
        }

        public Criteria andOpeCountEqualTo(Integer value) {
            addCriterion("OPE_COUNT =", value, "opeCount");
            return (Criteria) this;
        }

        public Criteria andOpeCountNotEqualTo(Integer value) {
            addCriterion("OPE_COUNT <>", value, "opeCount");
            return (Criteria) this;
        }

        public Criteria andOpeCountGreaterThan(Integer value) {
            addCriterion("OPE_COUNT >", value, "opeCount");
            return (Criteria) this;
        }

        public Criteria andOpeCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("OPE_COUNT >=", value, "opeCount");
            return (Criteria) this;
        }

        public Criteria andOpeCountLessThan(Integer value) {
            addCriterion("OPE_COUNT <", value, "opeCount");
            return (Criteria) this;
        }

        public Criteria andOpeCountLessThanOrEqualTo(Integer value) {
            addCriterion("OPE_COUNT <=", value, "opeCount");
            return (Criteria) this;
        }

        public Criteria andOpeCountIn(List<Integer> values) {
            addCriterion("OPE_COUNT in", values, "opeCount");
            return (Criteria) this;
        }

        public Criteria andOpeCountNotIn(List<Integer> values) {
            addCriterion("OPE_COUNT not in", values, "opeCount");
            return (Criteria) this;
        }

        public Criteria andOpeCountBetween(Integer value1, Integer value2) {
            addCriterion("OPE_COUNT between", value1, value2, "opeCount");
            return (Criteria) this;
        }

        public Criteria andOpeCountNotBetween(Integer value1, Integer value2) {
            addCriterion("OPE_COUNT not between", value1, value2, "opeCount");
            return (Criteria) this;
        }

        public Criteria andErrCountIsNull() {
            addCriterion("ERR_COUNT is null");
            return (Criteria) this;
        }

        public Criteria andErrCountIsNotNull() {
            addCriterion("ERR_COUNT is not null");
            return (Criteria) this;
        }

        public Criteria andErrCountEqualTo(Integer value) {
            addCriterion("ERR_COUNT =", value, "errCount");
            return (Criteria) this;
        }

        public Criteria andErrCountNotEqualTo(Integer value) {
            addCriterion("ERR_COUNT <>", value, "errCount");
            return (Criteria) this;
        }

        public Criteria andErrCountGreaterThan(Integer value) {
            addCriterion("ERR_COUNT >", value, "errCount");
            return (Criteria) this;
        }

        public Criteria andErrCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("ERR_COUNT >=", value, "errCount");
            return (Criteria) this;
        }

        public Criteria andErrCountLessThan(Integer value) {
            addCriterion("ERR_COUNT <", value, "errCount");
            return (Criteria) this;
        }

        public Criteria andErrCountLessThanOrEqualTo(Integer value) {
            addCriterion("ERR_COUNT <=", value, "errCount");
            return (Criteria) this;
        }

        public Criteria andErrCountIn(List<Integer> values) {
            addCriterion("ERR_COUNT in", values, "errCount");
            return (Criteria) this;
        }

        public Criteria andErrCountNotIn(List<Integer> values) {
            addCriterion("ERR_COUNT not in", values, "errCount");
            return (Criteria) this;
        }

        public Criteria andErrCountBetween(Integer value1, Integer value2) {
            addCriterion("ERR_COUNT between", value1, value2, "errCount");
            return (Criteria) this;
        }

        public Criteria andErrCountNotBetween(Integer value1, Integer value2) {
            addCriterion("ERR_COUNT not between", value1, value2, "errCount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated do_not_delete_during_merge Thu Apr 09 15:17:50 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TRANSFER_OPE_LOG
     *
     * @mbggenerated Thu Apr 09 15:17:50 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}