package net.muratec.mcs.model;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

public class TrendVehicleHistoryExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    public TrendVehicleHistoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTimeIsNull() {
            addCriterion("TIME is null");
            return (Criteria) this;
        }

        public Criteria andTimeIsNotNull() {
            addCriterion("TIME is not null");
            return (Criteria) this;
        }

        public Criteria andTimeEqualTo(Timestamp value) {
            addCriterion("TIME =", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotEqualTo(Timestamp value) {
            addCriterion("TIME <>", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThan(Timestamp value) {
            addCriterion("TIME >", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThanOrEqualTo(Timestamp value) {
            addCriterion("TIME >=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThan(Timestamp value) {
            addCriterion("TIME <", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThanOrEqualTo(Timestamp value) {
            addCriterion("TIME <=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeIn(List<Timestamp> values) {
            addCriterion("TIME in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotIn(List<Timestamp> values) {
            addCriterion("TIME not in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeBetween(Timestamp value1, Timestamp value2) {
            addCriterion("TIME between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotBetween(Timestamp value1, Timestamp value2) {
            addCriterion("TIME not between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andAmhsIdIsNull() {
            addCriterion("AMHS_ID is null");
            return (Criteria) this;
        }

        public Criteria andAmhsIdIsNotNull() {
            addCriterion("AMHS_ID is not null");
            return (Criteria) this;
        }

        public Criteria andAmhsIdEqualTo(String value) {
            addCriterion("AMHS_ID =", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdNotEqualTo(String value) {
            addCriterion("AMHS_ID <>", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdGreaterThan(String value) {
            addCriterion("AMHS_ID >", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdGreaterThanOrEqualTo(String value) {
            addCriterion("AMHS_ID >=", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdLessThan(String value) {
            addCriterion("AMHS_ID <", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdLessThanOrEqualTo(String value) {
            addCriterion("AMHS_ID <=", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdLike(String value) {
            addCriterion("AMHS_ID like", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdNotLike(String value) {
            addCriterion("AMHS_ID not like", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdIn(List<String> values) {
            addCriterion("AMHS_ID in", values, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdNotIn(List<String> values) {
            addCriterion("AMHS_ID not in", values, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdBetween(String value1, String value2) {
            addCriterion("AMHS_ID between", value1, value2, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdNotBetween(String value1, String value2) {
            addCriterion("AMHS_ID not between", value1, value2, "amhsId");
            return (Criteria) this;
        }

        public Criteria andVehicleTypeIsNull() {
            addCriterion("VEHICLE_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andVehicleTypeIsNotNull() {
            addCriterion("VEHICLE_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andVehicleTypeEqualTo(Short value) {
            addCriterion("VEHICLE_TYPE =", value, "vehicleType");
            return (Criteria) this;
        }

        public Criteria andVehicleTypeNotEqualTo(Short value) {
            addCriterion("VEHICLE_TYPE <>", value, "vehicleType");
            return (Criteria) this;
        }

        public Criteria andVehicleTypeGreaterThan(Short value) {
            addCriterion("VEHICLE_TYPE >", value, "vehicleType");
            return (Criteria) this;
        }

        public Criteria andVehicleTypeGreaterThanOrEqualTo(Short value) {
            addCriterion("VEHICLE_TYPE >=", value, "vehicleType");
            return (Criteria) this;
        }

        public Criteria andVehicleTypeLessThan(Short value) {
            addCriterion("VEHICLE_TYPE <", value, "vehicleType");
            return (Criteria) this;
        }

        public Criteria andVehicleTypeLessThanOrEqualTo(Short value) {
            addCriterion("VEHICLE_TYPE <=", value, "vehicleType");
            return (Criteria) this;
        }

        public Criteria andVehicleTypeIn(List<Short> values) {
            addCriterion("VEHICLE_TYPE in", values, "vehicleType");
            return (Criteria) this;
        }

        public Criteria andVehicleTypeNotIn(List<Short> values) {
            addCriterion("VEHICLE_TYPE not in", values, "vehicleType");
            return (Criteria) this;
        }

        public Criteria andVehicleTypeBetween(Short value1, Short value2) {
            addCriterion("VEHICLE_TYPE between", value1, value2, "vehicleType");
            return (Criteria) this;
        }

        public Criteria andVehicleTypeNotBetween(Short value1, Short value2) {
            addCriterion("VEHICLE_TYPE not between", value1, value2, "vehicleType");
            return (Criteria) this;
        }

        public Criteria andVehicleStateIsNull() {
            addCriterion("VEHICLE_STATE is null");
            return (Criteria) this;
        }

        public Criteria andVehicleStateIsNotNull() {
            addCriterion("VEHICLE_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andVehicleStateEqualTo(Short value) {
            addCriterion("VEHICLE_STATE =", value, "vehicleState");
            return (Criteria) this;
        }

        public Criteria andVehicleStateNotEqualTo(Short value) {
            addCriterion("VEHICLE_STATE <>", value, "vehicleState");
            return (Criteria) this;
        }

        public Criteria andVehicleStateGreaterThan(Short value) {
            addCriterion("VEHICLE_STATE >", value, "vehicleState");
            return (Criteria) this;
        }

        public Criteria andVehicleStateGreaterThanOrEqualTo(Short value) {
            addCriterion("VEHICLE_STATE >=", value, "vehicleState");
            return (Criteria) this;
        }

        public Criteria andVehicleStateLessThan(Short value) {
            addCriterion("VEHICLE_STATE <", value, "vehicleState");
            return (Criteria) this;
        }

        public Criteria andVehicleStateLessThanOrEqualTo(Short value) {
            addCriterion("VEHICLE_STATE <=", value, "vehicleState");
            return (Criteria) this;
        }

        public Criteria andVehicleStateIn(List<Short> values) {
            addCriterion("VEHICLE_STATE in", values, "vehicleState");
            return (Criteria) this;
        }

        public Criteria andVehicleStateNotIn(List<Short> values) {
            addCriterion("VEHICLE_STATE not in", values, "vehicleState");
            return (Criteria) this;
        }

        public Criteria andVehicleStateBetween(Short value1, Short value2) {
            addCriterion("VEHICLE_STATE between", value1, value2, "vehicleState");
            return (Criteria) this;
        }

        public Criteria andVehicleStateNotBetween(Short value1, Short value2) {
            addCriterion("VEHICLE_STATE not between", value1, value2, "vehicleState");
            return (Criteria) this;
        }

        public Criteria andVehicleNumIsNull() {
            addCriterion("VEHICLE_NUM is null");
            return (Criteria) this;
        }

        public Criteria andVehicleNumIsNotNull() {
            addCriterion("VEHICLE_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andVehicleNumEqualTo(Short value) {
            addCriterion("VEHICLE_NUM =", value, "vehicleNum");
            return (Criteria) this;
        }

        public Criteria andVehicleNumNotEqualTo(Short value) {
            addCriterion("VEHICLE_NUM <>", value, "vehicleNum");
            return (Criteria) this;
        }

        public Criteria andVehicleNumGreaterThan(Short value) {
            addCriterion("VEHICLE_NUM >", value, "vehicleNum");
            return (Criteria) this;
        }

        public Criteria andVehicleNumGreaterThanOrEqualTo(Short value) {
            addCriterion("VEHICLE_NUM >=", value, "vehicleNum");
            return (Criteria) this;
        }

        public Criteria andVehicleNumLessThan(Short value) {
            addCriterion("VEHICLE_NUM <", value, "vehicleNum");
            return (Criteria) this;
        }

        public Criteria andVehicleNumLessThanOrEqualTo(Short value) {
            addCriterion("VEHICLE_NUM <=", value, "vehicleNum");
            return (Criteria) this;
        }

        public Criteria andVehicleNumIn(List<Short> values) {
            addCriterion("VEHICLE_NUM in", values, "vehicleNum");
            return (Criteria) this;
        }

        public Criteria andVehicleNumNotIn(List<Short> values) {
            addCriterion("VEHICLE_NUM not in", values, "vehicleNum");
            return (Criteria) this;
        }

        public Criteria andVehicleNumBetween(Short value1, Short value2) {
            addCriterion("VEHICLE_NUM between", value1, value2, "vehicleNum");
            return (Criteria) this;
        }

        public Criteria andVehicleNumNotBetween(Short value1, Short value2) {
            addCriterion("VEHICLE_NUM not between", value1, value2, "vehicleNum");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table TREND_VEHICLE_HISTORY
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TREND_VEHICLE_HISTORY
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}