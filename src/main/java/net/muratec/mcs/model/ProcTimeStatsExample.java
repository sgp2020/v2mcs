package net.muratec.mcs.model;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

public class ProcTimeStatsExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    public ProcTimeStatsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {

        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    public String getOrderByClause() {

        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {

        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    public boolean isDistinct() {

        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {

        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    public void or(Criteria criteria) {

        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    public Criteria or() {

        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    public Criteria createCriteria() {

        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {

        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    public void clear() {

        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {

            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {

            return criteria;
        }

        public List<Criterion> getCriteria() {

            return criteria;
        }

        protected void addCriterion(String condition) {

            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {

            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {

            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTimeIsNull() {

            addCriterion("TIME is null");
            return (Criteria) this;
        }

        public Criteria andTimeIsNotNull() {

            addCriterion("TIME is not null");
            return (Criteria) this;
        }

        public Criteria andTimeEqualTo(Timestamp value) {

            addCriterion("TIME =", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotEqualTo(Timestamp value) {

            addCriterion("TIME <>", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThan(Timestamp value) {

            addCriterion("TIME >", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThanOrEqualTo(Timestamp value) {

            addCriterion("TIME >=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThan(Timestamp value) {

            addCriterion("TIME <", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThanOrEqualTo(Timestamp value) {

            addCriterion("TIME <=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeIn(List<Timestamp> values) {

            addCriterion("TIME in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotIn(List<Timestamp> values) {

            addCriterion("TIME not in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeBetween(Timestamp value1, Timestamp value2) {

            addCriterion("TIME between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotBetween(Timestamp value1, Timestamp value2) {

            addCriterion("TIME not between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andSystemIdIsNull() {

            addCriterion("SYSTEM_ID is null");
            return (Criteria) this;
        }

        public Criteria andSystemIdIsNotNull() {

            addCriterion("SYSTEM_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSystemIdEqualTo(Integer value) {

            addCriterion("SYSTEM_ID =", value, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdNotEqualTo(Integer value) {

            addCriterion("SYSTEM_ID <>", value, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdGreaterThan(Integer value) {

            addCriterion("SYSTEM_ID >", value, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdGreaterThanOrEqualTo(Integer value) {

            addCriterion("SYSTEM_ID >=", value, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdLessThan(Integer value) {

            addCriterion("SYSTEM_ID <", value, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdLessThanOrEqualTo(Integer value) {

            addCriterion("SYSTEM_ID <=", value, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdIn(List<Integer> values) {

            addCriterion("SYSTEM_ID in", values, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdNotIn(List<Integer> values) {

            addCriterion("SYSTEM_ID not in", values, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdBetween(Integer value1, Integer value2) {

            addCriterion("SYSTEM_ID between", value1, value2, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdNotBetween(Integer value1, Integer value2) {

            addCriterion("SYSTEM_ID not between", value1, value2, "systemId");
            return (Criteria) this;
        }

        public Criteria andEventNameIsNull() {

            addCriterion("EVENT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andEventNameIsNotNull() {

            addCriterion("EVENT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andEventNameEqualTo(String value) {

            addCriterion("EVENT_NAME =", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameNotEqualTo(String value) {

            addCriterion("EVENT_NAME <>", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameGreaterThan(String value) {

            addCriterion("EVENT_NAME >", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameGreaterThanOrEqualTo(String value) {

            addCriterion("EVENT_NAME >=", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameLessThan(String value) {

            addCriterion("EVENT_NAME <", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameLessThanOrEqualTo(String value) {

            addCriterion("EVENT_NAME <=", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameLike(String value) {

            addCriterion("EVENT_NAME like", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameNotLike(String value) {

            addCriterion("EVENT_NAME not like", value, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameIn(List<String> values) {

            addCriterion("EVENT_NAME in", values, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameNotIn(List<String> values) {

            addCriterion("EVENT_NAME not in", values, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameBetween(String value1, String value2) {

            addCriterion("EVENT_NAME between", value1, value2, "eventName");
            return (Criteria) this;
        }

        public Criteria andEventNameNotBetween(String value1, String value2) {

            addCriterion("EVENT_NAME not between", value1, value2, "eventName");
            return (Criteria) this;
        }

        public Criteria andMaxSecIsNull() {

            addCriterion("MAX_SEC is null");
            return (Criteria) this;
        }

        public Criteria andMaxSecIsNotNull() {

            addCriterion("MAX_SEC is not null");
            return (Criteria) this;
        }

        public Criteria andMaxSecEqualTo(Short value) {

            addCriterion("MAX_SEC =", value, "maxSec");
            return (Criteria) this;
        }

        public Criteria andMaxSecNotEqualTo(Short value) {

            addCriterion("MAX_SEC <>", value, "maxSec");
            return (Criteria) this;
        }

        public Criteria andMaxSecGreaterThan(Short value) {

            addCriterion("MAX_SEC >", value, "maxSec");
            return (Criteria) this;
        }

        public Criteria andMaxSecGreaterThanOrEqualTo(Short value) {

            addCriterion("MAX_SEC >=", value, "maxSec");
            return (Criteria) this;
        }

        public Criteria andMaxSecLessThan(Short value) {

            addCriterion("MAX_SEC <", value, "maxSec");
            return (Criteria) this;
        }

        public Criteria andMaxSecLessThanOrEqualTo(Short value) {

            addCriterion("MAX_SEC <=", value, "maxSec");
            return (Criteria) this;
        }

        public Criteria andMaxSecIn(List<Short> values) {

            addCriterion("MAX_SEC in", values, "maxSec");
            return (Criteria) this;
        }

        public Criteria andMaxSecNotIn(List<Short> values) {

            addCriterion("MAX_SEC not in", values, "maxSec");
            return (Criteria) this;
        }

        public Criteria andMaxSecBetween(Short value1, Short value2) {

            addCriterion("MAX_SEC between", value1, value2, "maxSec");
            return (Criteria) this;
        }

        public Criteria andMaxSecNotBetween(Short value1, Short value2) {

            addCriterion("MAX_SEC not between", value1, value2, "maxSec");
            return (Criteria) this;
        }

        public Criteria andMinSecIsNull() {

            addCriterion("MIN_SEC is null");
            return (Criteria) this;
        }

        public Criteria andMinSecIsNotNull() {

            addCriterion("MIN_SEC is not null");
            return (Criteria) this;
        }

        public Criteria andMinSecEqualTo(Short value) {

            addCriterion("MIN_SEC =", value, "minSec");
            return (Criteria) this;
        }

        public Criteria andMinSecNotEqualTo(Short value) {

            addCriterion("MIN_SEC <>", value, "minSec");
            return (Criteria) this;
        }

        public Criteria andMinSecGreaterThan(Short value) {

            addCriterion("MIN_SEC >", value, "minSec");
            return (Criteria) this;
        }

        public Criteria andMinSecGreaterThanOrEqualTo(Short value) {

            addCriterion("MIN_SEC >=", value, "minSec");
            return (Criteria) this;
        }

        public Criteria andMinSecLessThan(Short value) {

            addCriterion("MIN_SEC <", value, "minSec");
            return (Criteria) this;
        }

        public Criteria andMinSecLessThanOrEqualTo(Short value) {

            addCriterion("MIN_SEC <=", value, "minSec");
            return (Criteria) this;
        }

        public Criteria andMinSecIn(List<Short> values) {

            addCriterion("MIN_SEC in", values, "minSec");
            return (Criteria) this;
        }

        public Criteria andMinSecNotIn(List<Short> values) {

            addCriterion("MIN_SEC not in", values, "minSec");
            return (Criteria) this;
        }

        public Criteria andMinSecBetween(Short value1, Short value2) {

            addCriterion("MIN_SEC between", value1, value2, "minSec");
            return (Criteria) this;
        }

        public Criteria andMinSecNotBetween(Short value1, Short value2) {

            addCriterion("MIN_SEC not between", value1, value2, "minSec");
            return (Criteria) this;
        }

        public Criteria andTotalSecIsNull() {

            addCriterion("TOTAL_SEC is null");
            return (Criteria) this;
        }

        public Criteria andTotalSecIsNotNull() {

            addCriterion("TOTAL_SEC is not null");
            return (Criteria) this;
        }

        public Criteria andTotalSecEqualTo(Short value) {

            addCriterion("TOTAL_SEC =", value, "totalSec");
            return (Criteria) this;
        }

        public Criteria andTotalSecNotEqualTo(Short value) {

            addCriterion("TOTAL_SEC <>", value, "totalSec");
            return (Criteria) this;
        }

        public Criteria andTotalSecGreaterThan(Short value) {

            addCriterion("TOTAL_SEC >", value, "totalSec");
            return (Criteria) this;
        }

        public Criteria andTotalSecGreaterThanOrEqualTo(Short value) {

            addCriterion("TOTAL_SEC >=", value, "totalSec");
            return (Criteria) this;
        }

        public Criteria andTotalSecLessThan(Short value) {

            addCriterion("TOTAL_SEC <", value, "totalSec");
            return (Criteria) this;
        }

        public Criteria andTotalSecLessThanOrEqualTo(Short value) {

            addCriterion("TOTAL_SEC <=", value, "totalSec");
            return (Criteria) this;
        }

        public Criteria andTotalSecIn(List<Short> values) {

            addCriterion("TOTAL_SEC in", values, "totalSec");
            return (Criteria) this;
        }

        public Criteria andTotalSecNotIn(List<Short> values) {

            addCriterion("TOTAL_SEC not in", values, "totalSec");
            return (Criteria) this;
        }

        public Criteria andTotalSecBetween(Short value1, Short value2) {

            addCriterion("TOTAL_SEC between", value1, value2, "totalSec");
            return (Criteria) this;
        }

        public Criteria andTotalSecNotBetween(Short value1, Short value2) {

            addCriterion("TOTAL_SEC not between", value1, value2, "totalSec");
            return (Criteria) this;
        }

        public Criteria andTotalNumIsNull() {

            addCriterion("TOTAL_NUM is null");
            return (Criteria) this;
        }

        public Criteria andTotalNumIsNotNull() {

            addCriterion("TOTAL_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andTotalNumEqualTo(Short value) {

            addCriterion("TOTAL_NUM =", value, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumNotEqualTo(Short value) {

            addCriterion("TOTAL_NUM <>", value, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumGreaterThan(Short value) {

            addCriterion("TOTAL_NUM >", value, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumGreaterThanOrEqualTo(Short value) {

            addCriterion("TOTAL_NUM >=", value, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumLessThan(Short value) {

            addCriterion("TOTAL_NUM <", value, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumLessThanOrEqualTo(Short value) {

            addCriterion("TOTAL_NUM <=", value, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumIn(List<Short> values) {

            addCriterion("TOTAL_NUM in", values, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumNotIn(List<Short> values) {

            addCriterion("TOTAL_NUM not in", values, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumBetween(Short value1, Short value2) {

            addCriterion("TOTAL_NUM between", value1, value2, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumNotBetween(Short value1, Short value2) {

            addCriterion("TOTAL_NUM not between", value1, value2, "totalNum");
            return (Criteria) this;
        }

        public Criteria andAveSecIsNull() {

            addCriterion("AVE_SEC is null");
            return (Criteria) this;
        }

        public Criteria andAveSecIsNotNull() {

            addCriterion("AVE_SEC is not null");
            return (Criteria) this;
        }

        public Criteria andAveSecEqualTo(BigDecimal value) {

            addCriterion("AVE_SEC =", value, "aveSec");
            return (Criteria) this;
        }

        public Criteria andAveSecNotEqualTo(BigDecimal value) {

            addCriterion("AVE_SEC <>", value, "aveSec");
            return (Criteria) this;
        }

        public Criteria andAveSecGreaterThan(BigDecimal value) {

            addCriterion("AVE_SEC >", value, "aveSec");
            return (Criteria) this;
        }

        public Criteria andAveSecGreaterThanOrEqualTo(BigDecimal value) {

            addCriterion("AVE_SEC >=", value, "aveSec");
            return (Criteria) this;
        }

        public Criteria andAveSecLessThan(BigDecimal value) {

            addCriterion("AVE_SEC <", value, "aveSec");
            return (Criteria) this;
        }

        public Criteria andAveSecLessThanOrEqualTo(BigDecimal value) {

            addCriterion("AVE_SEC <=", value, "aveSec");
            return (Criteria) this;
        }

        public Criteria andAveSecIn(List<BigDecimal> values) {

            addCriterion("AVE_SEC in", values, "aveSec");
            return (Criteria) this;
        }

        public Criteria andAveSecNotIn(List<BigDecimal> values) {

            addCriterion("AVE_SEC not in", values, "aveSec");
            return (Criteria) this;
        }

        public Criteria andAveSecBetween(BigDecimal value1, BigDecimal value2) {

            addCriterion("AVE_SEC between", value1, value2, "aveSec");
            return (Criteria) this;
        }

        public Criteria andAveSecNotBetween(BigDecimal value1, BigDecimal value2) {

            addCriterion("AVE_SEC not between", value1, value2, "aveSec");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table PROC_TIME_STATS
     * @mbg.generated
     */
    public static class Criterion {

        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        public String getCondition() {

            return condition;
        }

        public Object getValue() {

            return value;
        }

        public Object getSecondValue() {

            return secondValue;
        }

        public boolean isNoValue() {

            return noValue;
        }

        public boolean isSingleValue() {

            return singleValue;
        }

        public boolean isBetweenValue() {

            return betweenValue;
        }

        public boolean isListValue() {

            return listValue;
        }

        public String getTypeHandler() {

            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PROC_TIME_STATS
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}
