package net.muratec.mcs.model;

import java.util.ArrayList;
import java.util.List;
import java.sql.Timestamp;

public class ProcessStateExample {

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    public ProcessStateExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {

        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    public String getOrderByClause() {

        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {

        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    public boolean isDistinct() {

        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {

        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    public void or(Criteria criteria) {

        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    public Criteria or() {

        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    public Criteria createCriteria() {

        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {

        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    public void clear() {

        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {

            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {

            return criteria;
        }

        public List<Criterion> getCriteria() {

            return criteria;
        }

        protected void addCriterion(String condition) {

            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {

            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {

            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSystemIdIsNull() {

            addCriterion("SYSTEM_ID is null");
            return (Criteria) this;
        }

        public Criteria andSystemIdIsNotNull() {

            addCriterion("SYSTEM_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSystemIdEqualTo(Integer value) {

            addCriterion("SYSTEM_ID =", value, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdNotEqualTo(Integer value) {

            addCriterion("SYSTEM_ID <>", value, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdGreaterThan(Integer value) {

            addCriterion("SYSTEM_ID >", value, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdGreaterThanOrEqualTo(Integer value) {

            addCriterion("SYSTEM_ID >=", value, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdLessThan(Integer value) {

            addCriterion("SYSTEM_ID <", value, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdLessThanOrEqualTo(Integer value) {

            addCriterion("SYSTEM_ID <=", value, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdIn(List<Integer> values) {

            addCriterion("SYSTEM_ID in", values, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdNotIn(List<Integer> values) {

            addCriterion("SYSTEM_ID not in", values, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdBetween(Integer value1, Integer value2) {

            addCriterion("SYSTEM_ID between", value1, value2, "systemId");
            return (Criteria) this;
        }

        public Criteria andSystemIdNotBetween(Integer value1, Integer value2) {

            addCriterion("SYSTEM_ID not between", value1, value2, "systemId");
            return (Criteria) this;
        }

        public Criteria andProcStateIsNull() {

            addCriterion("PROC_STATE is null");
            return (Criteria) this;
        }

        public Criteria andProcStateIsNotNull() {

            addCriterion("PROC_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andProcStateEqualTo(Short value) {

            addCriterion("PROC_STATE =", value, "procState");
            return (Criteria) this;
        }

        public Criteria andProcStateNotEqualTo(Short value) {

            addCriterion("PROC_STATE <>", value, "procState");
            return (Criteria) this;
        }

        public Criteria andProcStateGreaterThan(Short value) {

            addCriterion("PROC_STATE >", value, "procState");
            return (Criteria) this;
        }

        public Criteria andProcStateGreaterThanOrEqualTo(Short value) {

            addCriterion("PROC_STATE >=", value, "procState");
            return (Criteria) this;
        }

        public Criteria andProcStateLessThan(Short value) {

            addCriterion("PROC_STATE <", value, "procState");
            return (Criteria) this;
        }

        public Criteria andProcStateLessThanOrEqualTo(Short value) {

            addCriterion("PROC_STATE <=", value, "procState");
            return (Criteria) this;
        }

        public Criteria andProcStateIn(List<Short> values) {

            addCriterion("PROC_STATE in", values, "procState");
            return (Criteria) this;
        }

        public Criteria andProcStateNotIn(List<Short> values) {

            addCriterion("PROC_STATE not in", values, "procState");
            return (Criteria) this;
        }

        public Criteria andProcStateBetween(Short value1, Short value2) {

            addCriterion("PROC_STATE between", value1, value2, "procState");
            return (Criteria) this;
        }

        public Criteria andProcStateNotBetween(Short value1, Short value2) {

            addCriterion("PROC_STATE not between", value1, value2, "procState");
            return (Criteria) this;
        }

        public Criteria andPrevProcStateIsNull() {

            addCriterion("PREV_PROC_STATE is null");
            return (Criteria) this;
        }

        public Criteria andPrevProcStateIsNotNull() {

            addCriterion("PREV_PROC_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andPrevProcStateEqualTo(Short value) {

            addCriterion("PREV_PROC_STATE =", value, "prevProcState");
            return (Criteria) this;
        }

        public Criteria andPrevProcStateNotEqualTo(Short value) {

            addCriterion("PREV_PROC_STATE <>", value, "prevProcState");
            return (Criteria) this;
        }

        public Criteria andPrevProcStateGreaterThan(Short value) {

            addCriterion("PREV_PROC_STATE >", value, "prevProcState");
            return (Criteria) this;
        }

        public Criteria andPrevProcStateGreaterThanOrEqualTo(Short value) {

            addCriterion("PREV_PROC_STATE >=", value, "prevProcState");
            return (Criteria) this;
        }

        public Criteria andPrevProcStateLessThan(Short value) {

            addCriterion("PREV_PROC_STATE <", value, "prevProcState");
            return (Criteria) this;
        }

        public Criteria andPrevProcStateLessThanOrEqualTo(Short value) {

            addCriterion("PREV_PROC_STATE <=", value, "prevProcState");
            return (Criteria) this;
        }

        public Criteria andPrevProcStateIn(List<Short> values) {

            addCriterion("PREV_PROC_STATE in", values, "prevProcState");
            return (Criteria) this;
        }

        public Criteria andPrevProcStateNotIn(List<Short> values) {

            addCriterion("PREV_PROC_STATE not in", values, "prevProcState");
            return (Criteria) this;
        }

        public Criteria andPrevProcStateBetween(Short value1, Short value2) {

            addCriterion("PREV_PROC_STATE between", value1, value2, "prevProcState");
            return (Criteria) this;
        }

        public Criteria andPrevProcStateNotBetween(Short value1, Short value2) {

            addCriterion("PREV_PROC_STATE not between", value1, value2, "prevProcState");
            return (Criteria) this;
        }

        public Criteria andPidIsNull() {

            addCriterion("PID is null");
            return (Criteria) this;
        }

        public Criteria andPidIsNotNull() {

            addCriterion("PID is not null");
            return (Criteria) this;
        }

        public Criteria andPidEqualTo(Integer value) {

            addCriterion("PID =", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotEqualTo(Integer value) {

            addCriterion("PID <>", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThan(Integer value) {

            addCriterion("PID >", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThanOrEqualTo(Integer value) {

            addCriterion("PID >=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThan(Integer value) {

            addCriterion("PID <", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThanOrEqualTo(Integer value) {

            addCriterion("PID <=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidIn(List<Integer> values) {

            addCriterion("PID in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotIn(List<Integer> values) {

            addCriterion("PID not in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidBetween(Integer value1, Integer value2) {

            addCriterion("PID between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotBetween(Integer value1, Integer value2) {

            addCriterion("PID not between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andAvailabilityIsNull() {

            addCriterion("AVAILABILITY is null");
            return (Criteria) this;
        }

        public Criteria andAvailabilityIsNotNull() {

            addCriterion("AVAILABILITY is not null");
            return (Criteria) this;
        }

        public Criteria andAvailabilityEqualTo(Short value) {

            addCriterion("AVAILABILITY =", value, "availability");
            return (Criteria) this;
        }

        public Criteria andAvailabilityNotEqualTo(Short value) {

            addCriterion("AVAILABILITY <>", value, "availability");
            return (Criteria) this;
        }

        public Criteria andAvailabilityGreaterThan(Short value) {

            addCriterion("AVAILABILITY >", value, "availability");
            return (Criteria) this;
        }

        public Criteria andAvailabilityGreaterThanOrEqualTo(Short value) {

            addCriterion("AVAILABILITY >=", value, "availability");
            return (Criteria) this;
        }

        public Criteria andAvailabilityLessThan(Short value) {

            addCriterion("AVAILABILITY <", value, "availability");
            return (Criteria) this;
        }

        public Criteria andAvailabilityLessThanOrEqualTo(Short value) {

            addCriterion("AVAILABILITY <=", value, "availability");
            return (Criteria) this;
        }

        public Criteria andAvailabilityIn(List<Short> values) {

            addCriterion("AVAILABILITY in", values, "availability");
            return (Criteria) this;
        }

        public Criteria andAvailabilityNotIn(List<Short> values) {

            addCriterion("AVAILABILITY not in", values, "availability");
            return (Criteria) this;
        }

        public Criteria andAvailabilityBetween(Short value1, Short value2) {

            addCriterion("AVAILABILITY between", value1, value2, "availability");
            return (Criteria) this;
        }

        public Criteria andAvailabilityNotBetween(Short value1, Short value2) {

            addCriterion("AVAILABILITY not between", value1, value2, "availability");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupIsNull() {

            addCriterion("HANDLE_PROC_GROUP is null");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupIsNotNull() {

            addCriterion("HANDLE_PROC_GROUP is not null");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupEqualTo(String value) {

            addCriterion("HANDLE_PROC_GROUP =", value, "handleProcGroup");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupNotEqualTo(String value) {

            addCriterion("HANDLE_PROC_GROUP <>", value, "handleProcGroup");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupGreaterThan(String value) {

            addCriterion("HANDLE_PROC_GROUP >", value, "handleProcGroup");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupGreaterThanOrEqualTo(String value) {

            addCriterion("HANDLE_PROC_GROUP >=", value, "handleProcGroup");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupLessThan(String value) {

            addCriterion("HANDLE_PROC_GROUP <", value, "handleProcGroup");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupLessThanOrEqualTo(String value) {

            addCriterion("HANDLE_PROC_GROUP <=", value, "handleProcGroup");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupLike(String value) {

            addCriterion("HANDLE_PROC_GROUP like", value, "handleProcGroup");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupNotLike(String value) {

            addCriterion("HANDLE_PROC_GROUP not like", value, "handleProcGroup");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupIn(List<String> values) {

            addCriterion("HANDLE_PROC_GROUP in", values, "handleProcGroup");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupNotIn(List<String> values) {

            addCriterion("HANDLE_PROC_GROUP not in", values, "handleProcGroup");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupBetween(String value1, String value2) {

            addCriterion("HANDLE_PROC_GROUP between", value1, value2, "handleProcGroup");
            return (Criteria) this;
        }

        public Criteria andHandleProcGroupNotBetween(String value1, String value2) {

            addCriterion("HANDLE_PROC_GROUP not between", value1, value2, "handleProcGroup");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNull() {

            addCriterion("START_TIME is null");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNotNull() {

            addCriterion("START_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andStartTimeEqualTo(Timestamp value) {

            addCriterion("START_TIME =", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotEqualTo(Timestamp value) {

            addCriterion("START_TIME <>", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThan(Timestamp value) {

            addCriterion("START_TIME >", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThanOrEqualTo(Timestamp value) {

            addCriterion("START_TIME >=", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThan(Timestamp value) {

            addCriterion("START_TIME <", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThanOrEqualTo(Timestamp value) {

            addCriterion("START_TIME <=", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeIn(List<Timestamp> values) {

            addCriterion("START_TIME in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotIn(List<Timestamp> values) {

            addCriterion("START_TIME not in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeBetween(Timestamp value1, Timestamp value2) {

            addCriterion("START_TIME between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotBetween(Timestamp value1, Timestamp value2) {

            addCriterion("START_TIME not between", value1, value2, "startTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table PROCESS_STATE
     * @mbg.generated
     */
    public static class Criterion {

        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        public String getCondition() {

            return condition;
        }

        public Object getValue() {

            return value;
        }

        public Object getSecondValue() {

            return secondValue;
        }

        public boolean isNoValue() {

            return noValue;
        }

        public boolean isSingleValue() {

            return singleValue;
        }

        public boolean isBetweenValue() {

            return betweenValue;
        }

        public boolean isListValue() {

            return listValue;
        }

        public String getTypeHandler() {

            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table
     * PROCESS_STATE
     *
     * @mbggenerated do_not_delete_during_merge Wed Sep 07 15:13:24 JST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}
