package net.muratec.mcs.model;

import java.util.ArrayList;
import java.util.List;

public class GuiColorExample {

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    public GuiColorExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {

        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    public String getOrderByClause() {

        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {

        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    public boolean isDistinct() {

        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {

        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    public void or(Criteria criteria) {

        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    public Criteria or() {

        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    public Criteria createCriteria() {

        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {

        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    public void clear() {

        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {

            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {

            return criteria;
        }

        public List<Criterion> getCriteria() {

            return criteria;
        }

        protected void addCriterion(String condition) {

            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {

            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {

            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSectionIsNull() {

            addCriterion("SECTION is null");
            return (Criteria) this;
        }

        public Criteria andSectionIsNotNull() {

            addCriterion("SECTION is not null");
            return (Criteria) this;
        }

        public Criteria andSectionEqualTo(String value) {

            addCriterion("SECTION =", value, "section");
            return (Criteria) this;
        }

        public Criteria andSectionNotEqualTo(String value) {

            addCriterion("SECTION <>", value, "section");
            return (Criteria) this;
        }

        public Criteria andSectionGreaterThan(String value) {

            addCriterion("SECTION >", value, "section");
            return (Criteria) this;
        }

        public Criteria andSectionGreaterThanOrEqualTo(String value) {

            addCriterion("SECTION >=", value, "section");
            return (Criteria) this;
        }

        public Criteria andSectionLessThan(String value) {

            addCriterion("SECTION <", value, "section");
            return (Criteria) this;
        }

        public Criteria andSectionLessThanOrEqualTo(String value) {

            addCriterion("SECTION <=", value, "section");
            return (Criteria) this;
        }

        public Criteria andSectionLike(String value) {

            addCriterion("SECTION like", value, "section");
            return (Criteria) this;
        }

        public Criteria andSectionNotLike(String value) {

            addCriterion("SECTION not like", value, "section");
            return (Criteria) this;
        }

        public Criteria andSectionIn(List<String> values) {

            addCriterion("SECTION in", values, "section");
            return (Criteria) this;
        }

        public Criteria andSectionNotIn(List<String> values) {

            addCriterion("SECTION not in", values, "section");
            return (Criteria) this;
        }

        public Criteria andSectionBetween(String value1, String value2) {

            addCriterion("SECTION between", value1, value2, "section");
            return (Criteria) this;
        }

        public Criteria andSectionNotBetween(String value1, String value2) {

            addCriterion("SECTION not between", value1, value2, "section");
            return (Criteria) this;
        }

        public Criteria andKeyIsNull() {

            addCriterion("KEY is null");
            return (Criteria) this;
        }

        public Criteria andKeyIsNotNull() {

            addCriterion("KEY is not null");
            return (Criteria) this;
        }

        public Criteria andKeyEqualTo(String value) {

            addCriterion("KEY =", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyNotEqualTo(String value) {

            addCriterion("KEY <>", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyGreaterThan(String value) {

            addCriterion("KEY >", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyGreaterThanOrEqualTo(String value) {

            addCriterion("KEY >=", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyLessThan(String value) {

            addCriterion("KEY <", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyLessThanOrEqualTo(String value) {

            addCriterion("KEY <=", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyLike(String value) {

            addCriterion("KEY like", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyNotLike(String value) {

            addCriterion("KEY not like", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyIn(List<String> values) {

            addCriterion("KEY in", values, "key");
            return (Criteria) this;
        }

        public Criteria andKeyNotIn(List<String> values) {

            addCriterion("KEY not in", values, "key");
            return (Criteria) this;
        }

        public Criteria andKeyBetween(String value1, String value2) {

            addCriterion("KEY between", value1, value2, "key");
            return (Criteria) this;
        }

        public Criteria andKeyNotBetween(String value1, String value2) {

            addCriterion("KEY not between", value1, value2, "key");
            return (Criteria) this;
        }

        public Criteria andRgbRedIsNull() {

            addCriterion("RGB_RED is null");
            return (Criteria) this;
        }

        public Criteria andRgbRedIsNotNull() {

            addCriterion("RGB_RED is not null");
            return (Criteria) this;
        }

        public Criteria andRgbRedEqualTo(Short value) {

            addCriterion("RGB_RED =", value, "rgbRed");
            return (Criteria) this;
        }

        public Criteria andRgbRedNotEqualTo(Short value) {

            addCriterion("RGB_RED <>", value, "rgbRed");
            return (Criteria) this;
        }

        public Criteria andRgbRedGreaterThan(Short value) {

            addCriterion("RGB_RED >", value, "rgbRed");
            return (Criteria) this;
        }

        public Criteria andRgbRedGreaterThanOrEqualTo(Short value) {

            addCriterion("RGB_RED >=", value, "rgbRed");
            return (Criteria) this;
        }

        public Criteria andRgbRedLessThan(Short value) {

            addCriterion("RGB_RED <", value, "rgbRed");
            return (Criteria) this;
        }

        public Criteria andRgbRedLessThanOrEqualTo(Short value) {

            addCriterion("RGB_RED <=", value, "rgbRed");
            return (Criteria) this;
        }

        public Criteria andRgbRedIn(List<Short> values) {

            addCriterion("RGB_RED in", values, "rgbRed");
            return (Criteria) this;
        }

        public Criteria andRgbRedNotIn(List<Short> values) {

            addCriterion("RGB_RED not in", values, "rgbRed");
            return (Criteria) this;
        }

        public Criteria andRgbRedBetween(Short value1, Short value2) {

            addCriterion("RGB_RED between", value1, value2, "rgbRed");
            return (Criteria) this;
        }

        public Criteria andRgbRedNotBetween(Short value1, Short value2) {

            addCriterion("RGB_RED not between", value1, value2, "rgbRed");
            return (Criteria) this;
        }

        public Criteria andRgbGreenIsNull() {

            addCriterion("RGB_GREEN is null");
            return (Criteria) this;
        }

        public Criteria andRgbGreenIsNotNull() {

            addCriterion("RGB_GREEN is not null");
            return (Criteria) this;
        }

        public Criteria andRgbGreenEqualTo(Short value) {

            addCriterion("RGB_GREEN =", value, "rgbGreen");
            return (Criteria) this;
        }

        public Criteria andRgbGreenNotEqualTo(Short value) {

            addCriterion("RGB_GREEN <>", value, "rgbGreen");
            return (Criteria) this;
        }

        public Criteria andRgbGreenGreaterThan(Short value) {

            addCriterion("RGB_GREEN >", value, "rgbGreen");
            return (Criteria) this;
        }

        public Criteria andRgbGreenGreaterThanOrEqualTo(Short value) {

            addCriterion("RGB_GREEN >=", value, "rgbGreen");
            return (Criteria) this;
        }

        public Criteria andRgbGreenLessThan(Short value) {

            addCriterion("RGB_GREEN <", value, "rgbGreen");
            return (Criteria) this;
        }

        public Criteria andRgbGreenLessThanOrEqualTo(Short value) {

            addCriterion("RGB_GREEN <=", value, "rgbGreen");
            return (Criteria) this;
        }

        public Criteria andRgbGreenIn(List<Short> values) {

            addCriterion("RGB_GREEN in", values, "rgbGreen");
            return (Criteria) this;
        }

        public Criteria andRgbGreenNotIn(List<Short> values) {

            addCriterion("RGB_GREEN not in", values, "rgbGreen");
            return (Criteria) this;
        }

        public Criteria andRgbGreenBetween(Short value1, Short value2) {

            addCriterion("RGB_GREEN between", value1, value2, "rgbGreen");
            return (Criteria) this;
        }

        public Criteria andRgbGreenNotBetween(Short value1, Short value2) {

            addCriterion("RGB_GREEN not between", value1, value2, "rgbGreen");
            return (Criteria) this;
        }

        public Criteria andRgbBlueIsNull() {

            addCriterion("RGB_BLUE is null");
            return (Criteria) this;
        }

        public Criteria andRgbBlueIsNotNull() {

            addCriterion("RGB_BLUE is not null");
            return (Criteria) this;
        }

        public Criteria andRgbBlueEqualTo(Short value) {

            addCriterion("RGB_BLUE =", value, "rgbBlue");
            return (Criteria) this;
        }

        public Criteria andRgbBlueNotEqualTo(Short value) {

            addCriterion("RGB_BLUE <>", value, "rgbBlue");
            return (Criteria) this;
        }

        public Criteria andRgbBlueGreaterThan(Short value) {

            addCriterion("RGB_BLUE >", value, "rgbBlue");
            return (Criteria) this;
        }

        public Criteria andRgbBlueGreaterThanOrEqualTo(Short value) {

            addCriterion("RGB_BLUE >=", value, "rgbBlue");
            return (Criteria) this;
        }

        public Criteria andRgbBlueLessThan(Short value) {

            addCriterion("RGB_BLUE <", value, "rgbBlue");
            return (Criteria) this;
        }

        public Criteria andRgbBlueLessThanOrEqualTo(Short value) {

            addCriterion("RGB_BLUE <=", value, "rgbBlue");
            return (Criteria) this;
        }

        public Criteria andRgbBlueIn(List<Short> values) {

            addCriterion("RGB_BLUE in", values, "rgbBlue");
            return (Criteria) this;
        }

        public Criteria andRgbBlueNotIn(List<Short> values) {

            addCriterion("RGB_BLUE not in", values, "rgbBlue");
            return (Criteria) this;
        }

        public Criteria andRgbBlueBetween(Short value1, Short value2) {

            addCriterion("RGB_BLUE between", value1, value2, "rgbBlue");
            return (Criteria) this;
        }

        public Criteria andRgbBlueNotBetween(Short value1, Short value2) {

            addCriterion("RGB_BLUE not between", value1, value2, "rgbBlue");
            return (Criteria) this;
        }

        public Criteria andObjectIsNull() {

            addCriterion("OBJECT is null");
            return (Criteria) this;
        }

        public Criteria andObjectIsNotNull() {

            addCriterion("OBJECT is not null");
            return (Criteria) this;
        }

        public Criteria andObjectEqualTo(Short value) {

            addCriterion("OBJECT =", value, "object");
            return (Criteria) this;
        }

        public Criteria andObjectNotEqualTo(Short value) {

            addCriterion("OBJECT <>", value, "object");
            return (Criteria) this;
        }

        public Criteria andObjectGreaterThan(Short value) {

            addCriterion("OBJECT >", value, "object");
            return (Criteria) this;
        }

        public Criteria andObjectGreaterThanOrEqualTo(Short value) {

            addCriterion("OBJECT >=", value, "object");
            return (Criteria) this;
        }

        public Criteria andObjectLessThan(Short value) {

            addCriterion("OBJECT <", value, "object");
            return (Criteria) this;
        }

        public Criteria andObjectLessThanOrEqualTo(Short value) {

            addCriterion("OBJECT <=", value, "object");
            return (Criteria) this;
        }

        public Criteria andObjectIn(List<Short> values) {

            addCriterion("OBJECT in", values, "object");
            return (Criteria) this;
        }

        public Criteria andObjectNotIn(List<Short> values) {

            addCriterion("OBJECT not in", values, "object");
            return (Criteria) this;
        }

        public Criteria andObjectBetween(Short value1, Short value2) {

            addCriterion("OBJECT between", value1, value2, "object");
            return (Criteria) this;
        }

        public Criteria andObjectNotBetween(Short value1, Short value2) {

            addCriterion("OBJECT not between", value1, value2, "object");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {

            addCriterion("DESCRIPTION is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {

            addCriterion("DESCRIPTION is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {

            addCriterion("DESCRIPTION =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {

            addCriterion("DESCRIPTION <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {

            addCriterion("DESCRIPTION >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {

            addCriterion("DESCRIPTION >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {

            addCriterion("DESCRIPTION <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {

            addCriterion("DESCRIPTION <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {

            addCriterion("DESCRIPTION like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {

            addCriterion("DESCRIPTION not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {

            addCriterion("DESCRIPTION in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {

            addCriterion("DESCRIPTION not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {

            addCriterion("DESCRIPTION between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {

            addCriterion("DESCRIPTION not between", value1, value2, "description");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table GUI_COLOR
     * @mbg.generated
     */
    public static class Criterion {

        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        public String getCondition() {

            return condition;
        }

        public Object getValue() {

            return value;
        }

        public Object getSecondValue() {

            return secondValue;
        }

        public boolean isNoValue() {

            return noValue;
        }

        public boolean isSingleValue() {

            return singleValue;
        }

        public boolean isBetweenValue() {

            return betweenValue;
        }

        public boolean isListValue() {

            return listValue;
        }

        public String getTypeHandler() {

            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table
     * GUI_COLOR
     *
     * @mbggenerated do_not_delete_during_merge Mon Nov 14 10:45:44 JST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}
