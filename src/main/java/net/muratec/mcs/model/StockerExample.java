package net.muratec.mcs.model;

import java.util.ArrayList;
import java.util.List;
import java.sql.Timestamp;
import java.math.BigDecimal;

public class StockerExample {

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table STOCKER
     * @mbg.generated
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table STOCKER
     * @mbg.generated
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table STOCKER
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table STOCKER
     * @mbg.generated
     */
    public StockerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table STOCKER
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table STOCKER
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table STOCKER
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table STOCKER
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table STOCKER
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table STOCKER
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table STOCKER
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table STOCKER
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table STOCKER
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table STOCKER
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table STOCKER
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAmhsIdIsNull() {
            addCriterion("AMHS_ID is null");
            return (Criteria) this;
        }

        public Criteria andAmhsIdIsNotNull() {
            addCriterion("AMHS_ID is not null");
            return (Criteria) this;
        }

        public Criteria andAmhsIdEqualTo(String value) {
            addCriterion("AMHS_ID =", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdNotEqualTo(String value) {
            addCriterion("AMHS_ID <>", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdGreaterThan(String value) {
            addCriterion("AMHS_ID >", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdGreaterThanOrEqualTo(String value) {
            addCriterion("AMHS_ID >=", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdLessThan(String value) {
            addCriterion("AMHS_ID <", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdLessThanOrEqualTo(String value) {
            addCriterion("AMHS_ID <=", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdLike(String value) {
            addCriterion("AMHS_ID like", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdNotLike(String value) {
            addCriterion("AMHS_ID not like", value, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdIn(List<String> values) {
            addCriterion("AMHS_ID in", values, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdNotIn(List<String> values) {
            addCriterion("AMHS_ID not in", values, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdBetween(String value1, String value2) {
            addCriterion("AMHS_ID between", value1, value2, "amhsId");
            return (Criteria) this;
        }

        public Criteria andAmhsIdNotBetween(String value1, String value2) {
            addCriterion("AMHS_ID not between", value1, value2, "amhsId");
            return (Criteria) this;
        }

        public Criteria andCraneIdIsNull() {
            addCriterion("CRANE_ID is null");
            return (Criteria) this;
        }

        public Criteria andCraneIdIsNotNull() {
            addCriterion("CRANE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andCraneIdEqualTo(String value) {
            addCriterion("CRANE_ID =", value, "craneId");
            return (Criteria) this;
        }

        public Criteria andCraneIdNotEqualTo(String value) {
            addCriterion("CRANE_ID <>", value, "craneId");
            return (Criteria) this;
        }

        public Criteria andCraneIdGreaterThan(String value) {
            addCriterion("CRANE_ID >", value, "craneId");
            return (Criteria) this;
        }

        public Criteria andCraneIdGreaterThanOrEqualTo(String value) {
            addCriterion("CRANE_ID >=", value, "craneId");
            return (Criteria) this;
        }

        public Criteria andCraneIdLessThan(String value) {
            addCriterion("CRANE_ID <", value, "craneId");
            return (Criteria) this;
        }

        public Criteria andCraneIdLessThanOrEqualTo(String value) {
            addCriterion("CRANE_ID <=", value, "craneId");
            return (Criteria) this;
        }

        public Criteria andCraneIdLike(String value) {
            addCriterion("CRANE_ID like", value, "craneId");
            return (Criteria) this;
        }

        public Criteria andCraneIdNotLike(String value) {
            addCriterion("CRANE_ID not like", value, "craneId");
            return (Criteria) this;
        }

        public Criteria andCraneIdIn(List<String> values) {
            addCriterion("CRANE_ID in", values, "craneId");
            return (Criteria) this;
        }

        public Criteria andCraneIdNotIn(List<String> values) {
            addCriterion("CRANE_ID not in", values, "craneId");
            return (Criteria) this;
        }

        public Criteria andCraneIdBetween(String value1, String value2) {
            addCriterion("CRANE_ID between", value1, value2, "craneId");
            return (Criteria) this;
        }

        public Criteria andCraneIdNotBetween(String value1, String value2) {
            addCriterion("CRANE_ID not between", value1, value2, "craneId");
            return (Criteria) this;
        }

        public Criteria andCraneStateIsNull() {
            addCriterion("CRANE_STATE is null");
            return (Criteria) this;
        }

        public Criteria andCraneStateIsNotNull() {
            addCriterion("CRANE_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andCraneStateEqualTo(Short value) {
            addCriterion("CRANE_STATE =", value, "craneState");
            return (Criteria) this;
        }

        public Criteria andCraneStateNotEqualTo(Short value) {
            addCriterion("CRANE_STATE <>", value, "craneState");
            return (Criteria) this;
        }

        public Criteria andCraneStateGreaterThan(Short value) {
            addCriterion("CRANE_STATE >", value, "craneState");
            return (Criteria) this;
        }

        public Criteria andCraneStateGreaterThanOrEqualTo(Short value) {
            addCriterion("CRANE_STATE >=", value, "craneState");
            return (Criteria) this;
        }

        public Criteria andCraneStateLessThan(Short value) {
            addCriterion("CRANE_STATE <", value, "craneState");
            return (Criteria) this;
        }

        public Criteria andCraneStateLessThanOrEqualTo(Short value) {
            addCriterion("CRANE_STATE <=", value, "craneState");
            return (Criteria) this;
        }

        public Criteria andCraneStateIn(List<Short> values) {
            addCriterion("CRANE_STATE in", values, "craneState");
            return (Criteria) this;
        }

        public Criteria andCraneStateNotIn(List<Short> values) {
            addCriterion("CRANE_STATE not in", values, "craneState");
            return (Criteria) this;
        }

        public Criteria andCraneStateBetween(Short value1, Short value2) {
            addCriterion("CRANE_STATE between", value1, value2, "craneState");
            return (Criteria) this;
        }

        public Criteria andCraneStateNotBetween(Short value1, Short value2) {
            addCriterion("CRANE_STATE not between", value1, value2, "craneState");
            return (Criteria) this;
        }

        public Criteria andAvailableIsNull() {
            addCriterion("AVAILABLE is null");
            return (Criteria) this;
        }

        public Criteria andAvailableIsNotNull() {
            addCriterion("AVAILABLE is not null");
            return (Criteria) this;
        }

        public Criteria andAvailableEqualTo(Short value) {
            addCriterion("AVAILABLE =", value, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableNotEqualTo(Short value) {
            addCriterion("AVAILABLE <>", value, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableGreaterThan(Short value) {
            addCriterion("AVAILABLE >", value, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableGreaterThanOrEqualTo(Short value) {
            addCriterion("AVAILABLE >=", value, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableLessThan(Short value) {
            addCriterion("AVAILABLE <", value, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableLessThanOrEqualTo(Short value) {
            addCriterion("AVAILABLE <=", value, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableIn(List<Short> values) {
            addCriterion("AVAILABLE in", values, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableNotIn(List<Short> values) {
            addCriterion("AVAILABLE not in", values, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableBetween(Short value1, Short value2) {
            addCriterion("AVAILABLE between", value1, value2, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableNotBetween(Short value1, Short value2) {
            addCriterion("AVAILABLE not between", value1, value2, "available");
            return (Criteria) this;
        }

        public Criteria andCraneActiveTimeIsNull() {
            addCriterion("CRANE_ACTIVE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCraneActiveTimeIsNotNull() {
            addCriterion("CRANE_ACTIVE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCraneActiveTimeEqualTo(Timestamp value) {
            addCriterion("CRANE_ACTIVE_TIME =", value, "craneActiveTime");
            return (Criteria) this;
        }

        public Criteria andCraneActiveTimeNotEqualTo(Timestamp value) {
            addCriterion("CRANE_ACTIVE_TIME <>", value, "craneActiveTime");
            return (Criteria) this;
        }

        public Criteria andCraneActiveTimeGreaterThan(Timestamp value) {
            addCriterion("CRANE_ACTIVE_TIME >", value, "craneActiveTime");
            return (Criteria) this;
        }

        public Criteria andCraneActiveTimeGreaterThanOrEqualTo(Timestamp value) {
            addCriterion("CRANE_ACTIVE_TIME >=", value, "craneActiveTime");
            return (Criteria) this;
        }

        public Criteria andCraneActiveTimeLessThan(Timestamp value) {
            addCriterion("CRANE_ACTIVE_TIME <", value, "craneActiveTime");
            return (Criteria) this;
        }

        public Criteria andCraneActiveTimeLessThanOrEqualTo(Timestamp value) {
            addCriterion("CRANE_ACTIVE_TIME <=", value, "craneActiveTime");
            return (Criteria) this;
        }

        public Criteria andCraneActiveTimeIn(List<Timestamp> values) {
            addCriterion("CRANE_ACTIVE_TIME in", values, "craneActiveTime");
            return (Criteria) this;
        }

        public Criteria andCraneActiveTimeNotIn(List<Timestamp> values) {
            addCriterion("CRANE_ACTIVE_TIME not in", values, "craneActiveTime");
            return (Criteria) this;
        }

        public Criteria andCraneActiveTimeBetween(Timestamp value1, Timestamp value2) {
            addCriterion("CRANE_ACTIVE_TIME between", value1, value2, "craneActiveTime");
            return (Criteria) this;
        }

        public Criteria andCraneActiveTimeNotBetween(Timestamp value1, Timestamp value2) {
            addCriterion("CRANE_ACTIVE_TIME not between", value1, value2, "craneActiveTime");
            return (Criteria) this;
        }

        public Criteria andCraneIdleTimeIsNull() {
            addCriterion("CRANE_IDLE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCraneIdleTimeIsNotNull() {
            addCriterion("CRANE_IDLE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCraneIdleTimeEqualTo(Timestamp value) {
            addCriterion("CRANE_IDLE_TIME =", value, "craneIdleTime");
            return (Criteria) this;
        }

        public Criteria andCraneIdleTimeNotEqualTo(Timestamp value) {
            addCriterion("CRANE_IDLE_TIME <>", value, "craneIdleTime");
            return (Criteria) this;
        }

        public Criteria andCraneIdleTimeGreaterThan(Timestamp value) {
            addCriterion("CRANE_IDLE_TIME >", value, "craneIdleTime");
            return (Criteria) this;
        }

        public Criteria andCraneIdleTimeGreaterThanOrEqualTo(Timestamp value) {
            addCriterion("CRANE_IDLE_TIME >=", value, "craneIdleTime");
            return (Criteria) this;
        }

        public Criteria andCraneIdleTimeLessThan(Timestamp value) {
            addCriterion("CRANE_IDLE_TIME <", value, "craneIdleTime");
            return (Criteria) this;
        }

        public Criteria andCraneIdleTimeLessThanOrEqualTo(Timestamp value) {
            addCriterion("CRANE_IDLE_TIME <=", value, "craneIdleTime");
            return (Criteria) this;
        }

        public Criteria andCraneIdleTimeIn(List<Timestamp> values) {
            addCriterion("CRANE_IDLE_TIME in", values, "craneIdleTime");
            return (Criteria) this;
        }

        public Criteria andCraneIdleTimeNotIn(List<Timestamp> values) {
            addCriterion("CRANE_IDLE_TIME not in", values, "craneIdleTime");
            return (Criteria) this;
        }

        public Criteria andCraneIdleTimeBetween(Timestamp value1, Timestamp value2) {
            addCriterion("CRANE_IDLE_TIME between", value1, value2, "craneIdleTime");
            return (Criteria) this;
        }

        public Criteria andCraneIdleTimeNotBetween(Timestamp value1, Timestamp value2) {
            addCriterion("CRANE_IDLE_TIME not between", value1, value2, "craneIdleTime");
            return (Criteria) this;
        }

        public Criteria andShapeIdIsNull() {
            addCriterion("SHAPE_ID is null");
            return (Criteria) this;
        }

        public Criteria andShapeIdIsNotNull() {
            addCriterion("SHAPE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andShapeIdEqualTo(Short value) {
            addCriterion("SHAPE_ID =", value, "shapeId");
            return (Criteria) this;
        }

        public Criteria andShapeIdNotEqualTo(Short value) {
            addCriterion("SHAPE_ID <>", value, "shapeId");
            return (Criteria) this;
        }

        public Criteria andShapeIdGreaterThan(Short value) {
            addCriterion("SHAPE_ID >", value, "shapeId");
            return (Criteria) this;
        }

        public Criteria andShapeIdGreaterThanOrEqualTo(Short value) {
            addCriterion("SHAPE_ID >=", value, "shapeId");
            return (Criteria) this;
        }

        public Criteria andShapeIdLessThan(Short value) {
            addCriterion("SHAPE_ID <", value, "shapeId");
            return (Criteria) this;
        }

        public Criteria andShapeIdLessThanOrEqualTo(Short value) {
            addCriterion("SHAPE_ID <=", value, "shapeId");
            return (Criteria) this;
        }

        public Criteria andShapeIdIn(List<Short> values) {
            addCriterion("SHAPE_ID in", values, "shapeId");
            return (Criteria) this;
        }

        public Criteria andShapeIdNotIn(List<Short> values) {
            addCriterion("SHAPE_ID not in", values, "shapeId");
            return (Criteria) this;
        }

        public Criteria andShapeIdBetween(Short value1, Short value2) {
            addCriterion("SHAPE_ID between", value1, value2, "shapeId");
            return (Criteria) this;
        }

        public Criteria andShapeIdNotBetween(Short value1, Short value2) {
            addCriterion("SHAPE_ID not between", value1, value2, "shapeId");
            return (Criteria) this;
        }

        public Criteria andTotalShelvesIsNull() {
            addCriterion("TOTAL_SHELVES is null");
            return (Criteria) this;
        }

        public Criteria andTotalShelvesIsNotNull() {
            addCriterion("TOTAL_SHELVES is not null");
            return (Criteria) this;
        }

        public Criteria andTotalShelvesEqualTo(BigDecimal value) {
            addCriterion("TOTAL_SHELVES =", value, "totalShelves");
            return (Criteria) this;
        }

        public Criteria andTotalShelvesNotEqualTo(BigDecimal value) {
            addCriterion("TOTAL_SHELVES <>", value, "totalShelves");
            return (Criteria) this;
        }

        public Criteria andTotalShelvesGreaterThan(BigDecimal value) {
            addCriterion("TOTAL_SHELVES >", value, "totalShelves");
            return (Criteria) this;
        }

        public Criteria andTotalShelvesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TOTAL_SHELVES >=", value, "totalShelves");
            return (Criteria) this;
        }

        public Criteria andTotalShelvesLessThan(BigDecimal value) {
            addCriterion("TOTAL_SHELVES <", value, "totalShelves");
            return (Criteria) this;
        }

        public Criteria andTotalShelvesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TOTAL_SHELVES <=", value, "totalShelves");
            return (Criteria) this;
        }

        public Criteria andTotalShelvesIn(List<BigDecimal> values) {
            addCriterion("TOTAL_SHELVES in", values, "totalShelves");
            return (Criteria) this;
        }

        public Criteria andTotalShelvesNotIn(List<BigDecimal> values) {
            addCriterion("TOTAL_SHELVES not in", values, "totalShelves");
            return (Criteria) this;
        }

        public Criteria andTotalShelvesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TOTAL_SHELVES between", value1, value2, "totalShelves");
            return (Criteria) this;
        }

        public Criteria andTotalShelvesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TOTAL_SHELVES not between", value1, value2, "totalShelves");
            return (Criteria) this;
        }

        public Criteria andTotalOpeCountIsNull() {
            addCriterion("TOTAL_OPE_COUNT is null");
            return (Criteria) this;
        }

        public Criteria andTotalOpeCountIsNotNull() {
            addCriterion("TOTAL_OPE_COUNT is not null");
            return (Criteria) this;
        }

        public Criteria andTotalOpeCountEqualTo(BigDecimal value) {
            addCriterion("TOTAL_OPE_COUNT =", value, "totalOpeCount");
            return (Criteria) this;
        }

        public Criteria andTotalOpeCountNotEqualTo(BigDecimal value) {
            addCriterion("TOTAL_OPE_COUNT <>", value, "totalOpeCount");
            return (Criteria) this;
        }

        public Criteria andTotalOpeCountGreaterThan(BigDecimal value) {
            addCriterion("TOTAL_OPE_COUNT >", value, "totalOpeCount");
            return (Criteria) this;
        }

        public Criteria andTotalOpeCountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TOTAL_OPE_COUNT >=", value, "totalOpeCount");
            return (Criteria) this;
        }

        public Criteria andTotalOpeCountLessThan(BigDecimal value) {
            addCriterion("TOTAL_OPE_COUNT <", value, "totalOpeCount");
            return (Criteria) this;
        }

        public Criteria andTotalOpeCountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TOTAL_OPE_COUNT <=", value, "totalOpeCount");
            return (Criteria) this;
        }

        public Criteria andTotalOpeCountIn(List<BigDecimal> values) {
            addCriterion("TOTAL_OPE_COUNT in", values, "totalOpeCount");
            return (Criteria) this;
        }

        public Criteria andTotalOpeCountNotIn(List<BigDecimal> values) {
            addCriterion("TOTAL_OPE_COUNT not in", values, "totalOpeCount");
            return (Criteria) this;
        }

        public Criteria andTotalOpeCountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TOTAL_OPE_COUNT between", value1, value2, "totalOpeCount");
            return (Criteria) this;
        }

        public Criteria andTotalOpeCountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TOTAL_OPE_COUNT not between", value1, value2, "totalOpeCount");
            return (Criteria) this;
        }

        public Criteria andTotalErrorCountIsNull() {
            addCriterion("TOTAL_ERROR_COUNT is null");
            return (Criteria) this;
        }

        public Criteria andTotalErrorCountIsNotNull() {
            addCriterion("TOTAL_ERROR_COUNT is not null");
            return (Criteria) this;
        }

        public Criteria andTotalErrorCountEqualTo(BigDecimal value) {
            addCriterion("TOTAL_ERROR_COUNT =", value, "totalErrorCount");
            return (Criteria) this;
        }

        public Criteria andTotalErrorCountNotEqualTo(BigDecimal value) {
            addCriterion("TOTAL_ERROR_COUNT <>", value, "totalErrorCount");
            return (Criteria) this;
        }

        public Criteria andTotalErrorCountGreaterThan(BigDecimal value) {
            addCriterion("TOTAL_ERROR_COUNT >", value, "totalErrorCount");
            return (Criteria) this;
        }

        public Criteria andTotalErrorCountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TOTAL_ERROR_COUNT >=", value, "totalErrorCount");
            return (Criteria) this;
        }

        public Criteria andTotalErrorCountLessThan(BigDecimal value) {
            addCriterion("TOTAL_ERROR_COUNT <", value, "totalErrorCount");
            return (Criteria) this;
        }

        public Criteria andTotalErrorCountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TOTAL_ERROR_COUNT <=", value, "totalErrorCount");
            return (Criteria) this;
        }

        public Criteria andTotalErrorCountIn(List<BigDecimal> values) {
            addCriterion("TOTAL_ERROR_COUNT in", values, "totalErrorCount");
            return (Criteria) this;
        }

        public Criteria andTotalErrorCountNotIn(List<BigDecimal> values) {
            addCriterion("TOTAL_ERROR_COUNT not in", values, "totalErrorCount");
            return (Criteria) this;
        }

        public Criteria andTotalErrorCountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TOTAL_ERROR_COUNT between", value1, value2, "totalErrorCount");
            return (Criteria) this;
        }

        public Criteria andTotalErrorCountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TOTAL_ERROR_COUNT not between", value1, value2, "totalErrorCount");
            return (Criteria) this;
        }

        public Criteria andNearTransferFlagIsNull() {
            addCriterion("NEAR_TRANSFER_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andNearTransferFlagIsNotNull() {
            addCriterion("NEAR_TRANSFER_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andNearTransferFlagEqualTo(Short value) {
            addCriterion("NEAR_TRANSFER_FLAG =", value, "nearTransferFlag");
            return (Criteria) this;
        }

        public Criteria andNearTransferFlagNotEqualTo(Short value) {
            addCriterion("NEAR_TRANSFER_FLAG <>", value, "nearTransferFlag");
            return (Criteria) this;
        }

        public Criteria andNearTransferFlagGreaterThan(Short value) {
            addCriterion("NEAR_TRANSFER_FLAG >", value, "nearTransferFlag");
            return (Criteria) this;
        }

        public Criteria andNearTransferFlagGreaterThanOrEqualTo(Short value) {
            addCriterion("NEAR_TRANSFER_FLAG >=", value, "nearTransferFlag");
            return (Criteria) this;
        }

        public Criteria andNearTransferFlagLessThan(Short value) {
            addCriterion("NEAR_TRANSFER_FLAG <", value, "nearTransferFlag");
            return (Criteria) this;
        }

        public Criteria andNearTransferFlagLessThanOrEqualTo(Short value) {
            addCriterion("NEAR_TRANSFER_FLAG <=", value, "nearTransferFlag");
            return (Criteria) this;
        }

        public Criteria andNearTransferFlagIn(List<Short> values) {
            addCriterion("NEAR_TRANSFER_FLAG in", values, "nearTransferFlag");
            return (Criteria) this;
        }

        public Criteria andNearTransferFlagNotIn(List<Short> values) {
            addCriterion("NEAR_TRANSFER_FLAG not in", values, "nearTransferFlag");
            return (Criteria) this;
        }

        public Criteria andNearTransferFlagBetween(Short value1, Short value2) {
            addCriterion("NEAR_TRANSFER_FLAG between", value1, value2, "nearTransferFlag");
            return (Criteria) this;
        }

        public Criteria andNearTransferFlagNotBetween(Short value1, Short value2) {
            addCriterion("NEAR_TRANSFER_FLAG not between", value1, value2, "nearTransferFlag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table STOCKER
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table STOCKER
     *
     * @mbggenerated do_not_delete_during_merge Wed Sep 07 15:13:24 JST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}
