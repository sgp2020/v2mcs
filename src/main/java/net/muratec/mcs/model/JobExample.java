package net.muratec.mcs.model;

import java.util.ArrayList;
import java.util.List;
import java.sql.Timestamp;

public class JobExample {

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table JOB
     * @mbg.generated
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table JOB
     * @mbg.generated
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table JOB
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table JOB
     * @mbg.generated
     */
    public JobExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table JOB
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {

        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table JOB
     * @mbg.generated
     */
    public String getOrderByClause() {

        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table JOB
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {

        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table JOB
     * @mbg.generated
     */
    public boolean isDistinct() {

        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table JOB
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {

        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table JOB
     * @mbg.generated
     */
    public void or(Criteria criteria) {

        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table JOB
     * @mbg.generated
     */
    public Criteria or() {

        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table JOB
     * @mbg.generated
     */
    public Criteria createCriteria() {

        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table JOB
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {

        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table JOB
     * @mbg.generated
     */
    public void clear() {

        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table JOB
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {

            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {

            return criteria;
        }

        public List<Criterion> getCriteria() {

            return criteria;
        }

        protected void addCriterion(String condition) {

            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {

            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {

            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andJobIdIsNull() {

            addCriterion("JOB_ID is null");
            return (Criteria) this;
        }

        public Criteria andJobIdIsNotNull() {

            addCriterion("JOB_ID is not null");
            return (Criteria) this;
        }

        public Criteria andJobIdEqualTo(String value) {

            addCriterion("JOB_ID =", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotEqualTo(String value) {

            addCriterion("JOB_ID <>", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdGreaterThan(String value) {

            addCriterion("JOB_ID >", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdGreaterThanOrEqualTo(String value) {

            addCriterion("JOB_ID >=", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdLessThan(String value) {

            addCriterion("JOB_ID <", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdLessThanOrEqualTo(String value) {

            addCriterion("JOB_ID <=", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdLike(String value) {

            addCriterion("JOB_ID like", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotLike(String value) {

            addCriterion("JOB_ID not like", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdIn(List<String> values) {

            addCriterion("JOB_ID in", values, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotIn(List<String> values) {

            addCriterion("JOB_ID not in", values, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdBetween(String value1, String value2) {

            addCriterion("JOB_ID between", value1, value2, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotBetween(String value1, String value2) {

            addCriterion("JOB_ID not between", value1, value2, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobStateIsNull() {

            addCriterion("JOB_STATE is null");
            return (Criteria) this;
        }

        public Criteria andJobStateIsNotNull() {

            addCriterion("JOB_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andJobStateEqualTo(Short value) {

            addCriterion("JOB_STATE =", value, "jobState");
            return (Criteria) this;
        }

        public Criteria andJobStateNotEqualTo(Short value) {

            addCriterion("JOB_STATE <>", value, "jobState");
            return (Criteria) this;
        }

        public Criteria andJobStateGreaterThan(Short value) {

            addCriterion("JOB_STATE >", value, "jobState");
            return (Criteria) this;
        }

        public Criteria andJobStateGreaterThanOrEqualTo(Short value) {

            addCriterion("JOB_STATE >=", value, "jobState");
            return (Criteria) this;
        }

        public Criteria andJobStateLessThan(Short value) {

            addCriterion("JOB_STATE <", value, "jobState");
            return (Criteria) this;
        }

        public Criteria andJobStateLessThanOrEqualTo(Short value) {

            addCriterion("JOB_STATE <=", value, "jobState");
            return (Criteria) this;
        }

        public Criteria andJobStateIn(List<Short> values) {

            addCriterion("JOB_STATE in", values, "jobState");
            return (Criteria) this;
        }

        public Criteria andJobStateNotIn(List<Short> values) {

            addCriterion("JOB_STATE not in", values, "jobState");
            return (Criteria) this;
        }

        public Criteria andJobStateBetween(Short value1, Short value2) {

            addCriterion("JOB_STATE between", value1, value2, "jobState");
            return (Criteria) this;
        }

        public Criteria andJobStateNotBetween(Short value1, Short value2) {

            addCriterion("JOB_STATE not between", value1, value2, "jobState");
            return (Criteria) this;
        }

        public Criteria andReceivedTimeIsNull() {

            addCriterion("RECEIVED_TIME is null");
            return (Criteria) this;
        }

        public Criteria andReceivedTimeIsNotNull() {

            addCriterion("RECEIVED_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andReceivedTimeEqualTo(Timestamp value) {

            addCriterion("RECEIVED_TIME =", value, "receivedTime");
            return (Criteria) this;
        }

        public Criteria andReceivedTimeNotEqualTo(Timestamp value) {

            addCriterion("RECEIVED_TIME <>", value, "receivedTime");
            return (Criteria) this;
        }

        public Criteria andReceivedTimeGreaterThan(Timestamp value) {

            addCriterion("RECEIVED_TIME >", value, "receivedTime");
            return (Criteria) this;
        }

        public Criteria andReceivedTimeGreaterThanOrEqualTo(Timestamp value) {

            addCriterion("RECEIVED_TIME >=", value, "receivedTime");
            return (Criteria) this;
        }

        public Criteria andReceivedTimeLessThan(Timestamp value) {

            addCriterion("RECEIVED_TIME <", value, "receivedTime");
            return (Criteria) this;
        }

        public Criteria andReceivedTimeLessThanOrEqualTo(Timestamp value) {

            addCriterion("RECEIVED_TIME <=", value, "receivedTime");
            return (Criteria) this;
        }

        public Criteria andReceivedTimeIn(List<Timestamp> values) {

            addCriterion("RECEIVED_TIME in", values, "receivedTime");
            return (Criteria) this;
        }

        public Criteria andReceivedTimeNotIn(List<Timestamp> values) {

            addCriterion("RECEIVED_TIME not in", values, "receivedTime");
            return (Criteria) this;
        }

        public Criteria andReceivedTimeBetween(Timestamp value1, Timestamp value2) {

            addCriterion("RECEIVED_TIME between", value1, value2, "receivedTime");
            return (Criteria) this;
        }

        public Criteria andReceivedTimeNotBetween(Timestamp value1, Timestamp value2) {

            addCriterion("RECEIVED_TIME not between", value1, value2, "receivedTime");
            return (Criteria) this;
        }

        public Criteria andJobOwnerIsNull() {

            addCriterion("JOB_OWNER is null");
            return (Criteria) this;
        }

        public Criteria andJobOwnerIsNotNull() {

            addCriterion("JOB_OWNER is not null");
            return (Criteria) this;
        }

        public Criteria andJobOwnerEqualTo(String value) {

            addCriterion("JOB_OWNER =", value, "jobOwner");
            return (Criteria) this;
        }

        public Criteria andJobOwnerNotEqualTo(String value) {

            addCriterion("JOB_OWNER <>", value, "jobOwner");
            return (Criteria) this;
        }

        public Criteria andJobOwnerGreaterThan(String value) {

            addCriterion("JOB_OWNER >", value, "jobOwner");
            return (Criteria) this;
        }

        public Criteria andJobOwnerGreaterThanOrEqualTo(String value) {

            addCriterion("JOB_OWNER >=", value, "jobOwner");
            return (Criteria) this;
        }

        public Criteria andJobOwnerLessThan(String value) {

            addCriterion("JOB_OWNER <", value, "jobOwner");
            return (Criteria) this;
        }

        public Criteria andJobOwnerLessThanOrEqualTo(String value) {

            addCriterion("JOB_OWNER <=", value, "jobOwner");
            return (Criteria) this;
        }

        public Criteria andJobOwnerLike(String value) {

            addCriterion("JOB_OWNER like", value, "jobOwner");
            return (Criteria) this;
        }

        public Criteria andJobOwnerNotLike(String value) {

            addCriterion("JOB_OWNER not like", value, "jobOwner");
            return (Criteria) this;
        }

        public Criteria andJobOwnerIn(List<String> values) {

            addCriterion("JOB_OWNER in", values, "jobOwner");
            return (Criteria) this;
        }

        public Criteria andJobOwnerNotIn(List<String> values) {

            addCriterion("JOB_OWNER not in", values, "jobOwner");
            return (Criteria) this;
        }

        public Criteria andJobOwnerBetween(String value1, String value2) {

            addCriterion("JOB_OWNER between", value1, value2, "jobOwner");
            return (Criteria) this;
        }

        public Criteria andJobOwnerNotBetween(String value1, String value2) {

            addCriterion("JOB_OWNER not between", value1, value2, "jobOwner");
            return (Criteria) this;
        }

        public Criteria andJobTypeIsNull() {
            addCriterion("JOB_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andJobTypeIsNotNull() {
            addCriterion("JOB_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andJobTypeEqualTo(Short value) {
            addCriterion("JOB_TYPE =", value, "jobType");
            return (Criteria) this;
        }

        public Criteria andJobTypeNotEqualTo(Short value) {
            addCriterion("JOB_TYPE <>", value, "jobType");
            return (Criteria) this;
        }

        public Criteria andJobTypeGreaterThan(Short value) {
            addCriterion("JOB_TYPE >", value, "jobType");
            return (Criteria) this;
        }

        public Criteria andJobTypeGreaterThanOrEqualTo(Short value) {
            addCriterion("JOB_TYPE >=", value, "jobType");
            return (Criteria) this;
        }

        public Criteria andJobTypeLessThan(Short value) {
            addCriterion("JOB_TYPE <", value, "jobType");
            return (Criteria) this;
        }

        public Criteria andJobTypeLessThanOrEqualTo(Short value) {
            addCriterion("JOB_TYPE <=", value, "jobType");
            return (Criteria) this;
        }

        public Criteria andJobTypeIn(List<Short> values) {
            addCriterion("JOB_TYPE in", values, "jobType");
            return (Criteria) this;
        }

        public Criteria andJobTypeNotIn(List<Short> values) {
            addCriterion("JOB_TYPE not in", values, "jobType");
            return (Criteria) this;
        }

        public Criteria andJobTypeBetween(Short value1, Short value2) {
            addCriterion("JOB_TYPE between", value1, value2, "jobType");
            return (Criteria) this;
        }

        public Criteria andJobTypeNotBetween(Short value1, Short value2) {
            addCriterion("JOB_TYPE not between", value1, value2, "jobType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table JOB
     * @mbg.generated
     */
    public static class Criterion {

        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        public String getCondition() {

            return condition;
        }

        public Object getValue() {

            return value;
        }

        public Object getSecondValue() {

            return secondValue;
        }

        public boolean isNoValue() {

            return noValue;
        }

        public boolean isSingleValue() {

            return singleValue;
        }

        public boolean isBetweenValue() {

            return betweenValue;
        }

        public boolean isListValue() {

            return listValue;
        }

        public String getTypeHandler() {

            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table JOB
     *
     * @mbggenerated do_not_delete_during_merge Wed Sep 07 15:13:24 JST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}
