package net.muratec.mcs.model;

import java.util.ArrayList;
import java.util.List;

public class ScreenColorMasterExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    public ScreenColorMasterExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andColorIsNull() {
            addCriterion("COLOR is null");
            return (Criteria) this;
        }

        public Criteria andColorIsNotNull() {
            addCriterion("COLOR is not null");
            return (Criteria) this;
        }

        public Criteria andColorEqualTo(String value) {
            addCriterion("COLOR =", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorNotEqualTo(String value) {
            addCriterion("COLOR <>", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorGreaterThan(String value) {
            addCriterion("COLOR >", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorGreaterThanOrEqualTo(String value) {
            addCriterion("COLOR >=", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorLessThan(String value) {
            addCriterion("COLOR <", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorLessThanOrEqualTo(String value) {
            addCriterion("COLOR <=", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorLike(String value) {
            addCriterion("COLOR like", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorNotLike(String value) {
            addCriterion("COLOR not like", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorIn(List<String> values) {
            addCriterion("COLOR in", values, "color");
            return (Criteria) this;
        }

        public Criteria andColorNotIn(List<String> values) {
            addCriterion("COLOR not in", values, "color");
            return (Criteria) this;
        }

        public Criteria andColorBetween(String value1, String value2) {
            addCriterion("COLOR between", value1, value2, "color");
            return (Criteria) this;
        }

        public Criteria andColorNotBetween(String value1, String value2) {
            addCriterion("COLOR not between", value1, value2, "color");
            return (Criteria) this;
        }

        public Criteria andColorNameIsNull() {
            addCriterion("COLOR_NAME is null");
            return (Criteria) this;
        }

        public Criteria andColorNameIsNotNull() {
            addCriterion("COLOR_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andColorNameEqualTo(String value) {
            addCriterion("COLOR_NAME =", value, "colorName");
            return (Criteria) this;
        }

        public Criteria andColorNameNotEqualTo(String value) {
            addCriterion("COLOR_NAME <>", value, "colorName");
            return (Criteria) this;
        }

        public Criteria andColorNameGreaterThan(String value) {
            addCriterion("COLOR_NAME >", value, "colorName");
            return (Criteria) this;
        }

        public Criteria andColorNameGreaterThanOrEqualTo(String value) {
            addCriterion("COLOR_NAME >=", value, "colorName");
            return (Criteria) this;
        }

        public Criteria andColorNameLessThan(String value) {
            addCriterion("COLOR_NAME <", value, "colorName");
            return (Criteria) this;
        }

        public Criteria andColorNameLessThanOrEqualTo(String value) {
            addCriterion("COLOR_NAME <=", value, "colorName");
            return (Criteria) this;
        }

        public Criteria andColorNameLike(String value) {
            addCriterion("COLOR_NAME like", value, "colorName");
            return (Criteria) this;
        }

        public Criteria andColorNameNotLike(String value) {
            addCriterion("COLOR_NAME not like", value, "colorName");
            return (Criteria) this;
        }

        public Criteria andColorNameIn(List<String> values) {
            addCriterion("COLOR_NAME in", values, "colorName");
            return (Criteria) this;
        }

        public Criteria andColorNameNotIn(List<String> values) {
            addCriterion("COLOR_NAME not in", values, "colorName");
            return (Criteria) this;
        }

        public Criteria andColorNameBetween(String value1, String value2) {
            addCriterion("COLOR_NAME between", value1, value2, "colorName");
            return (Criteria) this;
        }

        public Criteria andColorNameNotBetween(String value1, String value2) {
            addCriterion("COLOR_NAME not between", value1, value2, "colorName");
            return (Criteria) this;
        }

        public Criteria andRedParamIsNull() {
            addCriterion("RED_PARAM is null");
            return (Criteria) this;
        }

        public Criteria andRedParamIsNotNull() {
            addCriterion("RED_PARAM is not null");
            return (Criteria) this;
        }

        public Criteria andRedParamEqualTo(Short value) {
            addCriterion("RED_PARAM =", value, "redParam");
            return (Criteria) this;
        }

        public Criteria andRedParamNotEqualTo(Short value) {
            addCriterion("RED_PARAM <>", value, "redParam");
            return (Criteria) this;
        }

        public Criteria andRedParamGreaterThan(Short value) {
            addCriterion("RED_PARAM >", value, "redParam");
            return (Criteria) this;
        }

        public Criteria andRedParamGreaterThanOrEqualTo(Short value) {
            addCriterion("RED_PARAM >=", value, "redParam");
            return (Criteria) this;
        }

        public Criteria andRedParamLessThan(Short value) {
            addCriterion("RED_PARAM <", value, "redParam");
            return (Criteria) this;
        }

        public Criteria andRedParamLessThanOrEqualTo(Short value) {
            addCriterion("RED_PARAM <=", value, "redParam");
            return (Criteria) this;
        }

        public Criteria andRedParamIn(List<Short> values) {
            addCriterion("RED_PARAM in", values, "redParam");
            return (Criteria) this;
        }

        public Criteria andRedParamNotIn(List<Short> values) {
            addCriterion("RED_PARAM not in", values, "redParam");
            return (Criteria) this;
        }

        public Criteria andRedParamBetween(Short value1, Short value2) {
            addCriterion("RED_PARAM between", value1, value2, "redParam");
            return (Criteria) this;
        }

        public Criteria andRedParamNotBetween(Short value1, Short value2) {
            addCriterion("RED_PARAM not between", value1, value2, "redParam");
            return (Criteria) this;
        }

        public Criteria andGreenParamIsNull() {
            addCriterion("GREEN_PARAM is null");
            return (Criteria) this;
        }

        public Criteria andGreenParamIsNotNull() {
            addCriterion("GREEN_PARAM is not null");
            return (Criteria) this;
        }

        public Criteria andGreenParamEqualTo(Short value) {
            addCriterion("GREEN_PARAM =", value, "greenParam");
            return (Criteria) this;
        }

        public Criteria andGreenParamNotEqualTo(Short value) {
            addCriterion("GREEN_PARAM <>", value, "greenParam");
            return (Criteria) this;
        }

        public Criteria andGreenParamGreaterThan(Short value) {
            addCriterion("GREEN_PARAM >", value, "greenParam");
            return (Criteria) this;
        }

        public Criteria andGreenParamGreaterThanOrEqualTo(Short value) {
            addCriterion("GREEN_PARAM >=", value, "greenParam");
            return (Criteria) this;
        }

        public Criteria andGreenParamLessThan(Short value) {
            addCriterion("GREEN_PARAM <", value, "greenParam");
            return (Criteria) this;
        }

        public Criteria andGreenParamLessThanOrEqualTo(Short value) {
            addCriterion("GREEN_PARAM <=", value, "greenParam");
            return (Criteria) this;
        }

        public Criteria andGreenParamIn(List<Short> values) {
            addCriterion("GREEN_PARAM in", values, "greenParam");
            return (Criteria) this;
        }

        public Criteria andGreenParamNotIn(List<Short> values) {
            addCriterion("GREEN_PARAM not in", values, "greenParam");
            return (Criteria) this;
        }

        public Criteria andGreenParamBetween(Short value1, Short value2) {
            addCriterion("GREEN_PARAM between", value1, value2, "greenParam");
            return (Criteria) this;
        }

        public Criteria andGreenParamNotBetween(Short value1, Short value2) {
            addCriterion("GREEN_PARAM not between", value1, value2, "greenParam");
            return (Criteria) this;
        }

        public Criteria andBlueParamIsNull() {
            addCriterion("BLUE_PARAM is null");
            return (Criteria) this;
        }

        public Criteria andBlueParamIsNotNull() {
            addCriterion("BLUE_PARAM is not null");
            return (Criteria) this;
        }

        public Criteria andBlueParamEqualTo(Short value) {
            addCriterion("BLUE_PARAM =", value, "blueParam");
            return (Criteria) this;
        }

        public Criteria andBlueParamNotEqualTo(Short value) {
            addCriterion("BLUE_PARAM <>", value, "blueParam");
            return (Criteria) this;
        }

        public Criteria andBlueParamGreaterThan(Short value) {
            addCriterion("BLUE_PARAM >", value, "blueParam");
            return (Criteria) this;
        }

        public Criteria andBlueParamGreaterThanOrEqualTo(Short value) {
            addCriterion("BLUE_PARAM >=", value, "blueParam");
            return (Criteria) this;
        }

        public Criteria andBlueParamLessThan(Short value) {
            addCriterion("BLUE_PARAM <", value, "blueParam");
            return (Criteria) this;
        }

        public Criteria andBlueParamLessThanOrEqualTo(Short value) {
            addCriterion("BLUE_PARAM <=", value, "blueParam");
            return (Criteria) this;
        }

        public Criteria andBlueParamIn(List<Short> values) {
            addCriterion("BLUE_PARAM in", values, "blueParam");
            return (Criteria) this;
        }

        public Criteria andBlueParamNotIn(List<Short> values) {
            addCriterion("BLUE_PARAM not in", values, "blueParam");
            return (Criteria) this;
        }

        public Criteria andBlueParamBetween(Short value1, Short value2) {
            addCriterion("BLUE_PARAM between", value1, value2, "blueParam");
            return (Criteria) this;
        }

        public Criteria andBlueParamNotBetween(Short value1, Short value2) {
            addCriterion("BLUE_PARAM not between", value1, value2, "blueParam");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCREEN_COLOR_MASTER
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}