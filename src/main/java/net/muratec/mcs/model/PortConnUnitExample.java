package net.muratec.mcs.model;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

public class PortConnUnitExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	public PortConnUnitExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andConnFromUnitIdIsNull() {
			addCriterion("CONN_FROM_UNIT_ID is null");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdIsNotNull() {
			addCriterion("CONN_FROM_UNIT_ID is not null");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdEqualTo(String value) {
			addCriterion("CONN_FROM_UNIT_ID =", value, "connFromUnitId");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdNotEqualTo(String value) {
			addCriterion("CONN_FROM_UNIT_ID <>", value, "connFromUnitId");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdGreaterThan(String value) {
			addCriterion("CONN_FROM_UNIT_ID >", value, "connFromUnitId");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdGreaterThanOrEqualTo(String value) {
			addCriterion("CONN_FROM_UNIT_ID >=", value, "connFromUnitId");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdLessThan(String value) {
			addCriterion("CONN_FROM_UNIT_ID <", value, "connFromUnitId");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdLessThanOrEqualTo(String value) {
			addCriterion("CONN_FROM_UNIT_ID <=", value, "connFromUnitId");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdLike(String value) {
			addCriterion("CONN_FROM_UNIT_ID like", value, "connFromUnitId");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdNotLike(String value) {
			addCriterion("CONN_FROM_UNIT_ID not like", value, "connFromUnitId");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdIn(List<String> values) {
			addCriterion("CONN_FROM_UNIT_ID in", values, "connFromUnitId");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdNotIn(List<String> values) {
			addCriterion("CONN_FROM_UNIT_ID not in", values, "connFromUnitId");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdBetween(String value1, String value2) {
			addCriterion("CONN_FROM_UNIT_ID between", value1, value2, "connFromUnitId");
			return (Criteria) this;
		}

		public Criteria andConnFromUnitIdNotBetween(String value1, String value2) {
			addCriterion("CONN_FROM_UNIT_ID not between", value1, value2, "connFromUnitId");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdIsNull() {
			addCriterion("CONN_TO_UNIT_ID is null");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdIsNotNull() {
			addCriterion("CONN_TO_UNIT_ID is not null");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdEqualTo(String value) {
			addCriterion("CONN_TO_UNIT_ID =", value, "connToUnitId");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdNotEqualTo(String value) {
			addCriterion("CONN_TO_UNIT_ID <>", value, "connToUnitId");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdGreaterThan(String value) {
			addCriterion("CONN_TO_UNIT_ID >", value, "connToUnitId");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdGreaterThanOrEqualTo(String value) {
			addCriterion("CONN_TO_UNIT_ID >=", value, "connToUnitId");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdLessThan(String value) {
			addCriterion("CONN_TO_UNIT_ID <", value, "connToUnitId");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdLessThanOrEqualTo(String value) {
			addCriterion("CONN_TO_UNIT_ID <=", value, "connToUnitId");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdLike(String value) {
			addCriterion("CONN_TO_UNIT_ID like", value, "connToUnitId");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdNotLike(String value) {
			addCriterion("CONN_TO_UNIT_ID not like", value, "connToUnitId");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdIn(List<String> values) {
			addCriterion("CONN_TO_UNIT_ID in", values, "connToUnitId");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdNotIn(List<String> values) {
			addCriterion("CONN_TO_UNIT_ID not in", values, "connToUnitId");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdBetween(String value1, String value2) {
			addCriterion("CONN_TO_UNIT_ID between", value1, value2, "connToUnitId");
			return (Criteria) this;
		}

		public Criteria andConnToUnitIdNotBetween(String value1, String value2) {
			addCriterion("CONN_TO_UNIT_ID not between", value1, value2, "connToUnitId");
			return (Criteria) this;
		}

		public Criteria andPortIdIsNull() {
			addCriterion("PORT_ID is null");
			return (Criteria) this;
		}

		public Criteria andPortIdIsNotNull() {
			addCriterion("PORT_ID is not null");
			return (Criteria) this;
		}

		public Criteria andPortIdEqualTo(String value) {
			addCriterion("PORT_ID =", value, "portId");
			return (Criteria) this;
		}

		public Criteria andPortIdNotEqualTo(String value) {
			addCriterion("PORT_ID <>", value, "portId");
			return (Criteria) this;
		}

		public Criteria andPortIdGreaterThan(String value) {
			addCriterion("PORT_ID >", value, "portId");
			return (Criteria) this;
		}

		public Criteria andPortIdGreaterThanOrEqualTo(String value) {
			addCriterion("PORT_ID >=", value, "portId");
			return (Criteria) this;
		}

		public Criteria andPortIdLessThan(String value) {
			addCriterion("PORT_ID <", value, "portId");
			return (Criteria) this;
		}

		public Criteria andPortIdLessThanOrEqualTo(String value) {
			addCriterion("PORT_ID <=", value, "portId");
			return (Criteria) this;
		}

		public Criteria andPortIdLike(String value) {
			addCriterion("PORT_ID like", value, "portId");
			return (Criteria) this;
		}

		public Criteria andPortIdNotLike(String value) {
			addCriterion("PORT_ID not like", value, "portId");
			return (Criteria) this;
		}

		public Criteria andPortIdIn(List<String> values) {
			addCriterion("PORT_ID in", values, "portId");
			return (Criteria) this;
		}

		public Criteria andPortIdNotIn(List<String> values) {
			addCriterion("PORT_ID not in", values, "portId");
			return (Criteria) this;
		}

		public Criteria andPortIdBetween(String value1, String value2) {
			addCriterion("PORT_ID between", value1, value2, "portId");
			return (Criteria) this;
		}

		public Criteria andPortIdNotBetween(String value1, String value2) {
			addCriterion("PORT_ID not between", value1, value2, "portId");
			return (Criteria) this;
		}

		public Criteria andBufferIsNull() {
			addCriterion("BUFFER is null");
			return (Criteria) this;
		}

		public Criteria andBufferIsNotNull() {
			addCriterion("BUFFER is not null");
			return (Criteria) this;
		}

		public Criteria andBufferEqualTo(Short value) {
			addCriterion("BUFFER =", value, "buffer");
			return (Criteria) this;
		}

		public Criteria andBufferNotEqualTo(Short value) {
			addCriterion("BUFFER <>", value, "buffer");
			return (Criteria) this;
		}

		public Criteria andBufferGreaterThan(Short value) {
			addCriterion("BUFFER >", value, "buffer");
			return (Criteria) this;
		}

		public Criteria andBufferGreaterThanOrEqualTo(Short value) {
			addCriterion("BUFFER >=", value, "buffer");
			return (Criteria) this;
		}

		public Criteria andBufferLessThan(Short value) {
			addCriterion("BUFFER <", value, "buffer");
			return (Criteria) this;
		}

		public Criteria andBufferLessThanOrEqualTo(Short value) {
			addCriterion("BUFFER <=", value, "buffer");
			return (Criteria) this;
		}

		public Criteria andBufferIn(List<Short> values) {
			addCriterion("BUFFER in", values, "buffer");
			return (Criteria) this;
		}

		public Criteria andBufferNotIn(List<Short> values) {
			addCriterion("BUFFER not in", values, "buffer");
			return (Criteria) this;
		}

		public Criteria andBufferBetween(Short value1, Short value2) {
			addCriterion("BUFFER between", value1, value2, "buffer");
			return (Criteria) this;
		}

		public Criteria andBufferNotBetween(Short value1, Short value2) {
			addCriterion("BUFFER not between", value1, value2, "buffer");
			return (Criteria) this;
		}

		public Criteria andUseTimeIsNull() {
			addCriterion("USE_TIME is null");
			return (Criteria) this;
		}

		public Criteria andUseTimeIsNotNull() {
			addCriterion("USE_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andUseTimeEqualTo(Timestamp value) {
			addCriterion("USE_TIME =", value, "useTime");
			return (Criteria) this;
		}

		public Criteria andUseTimeNotEqualTo(Timestamp value) {
			addCriterion("USE_TIME <>", value, "useTime");
			return (Criteria) this;
		}

		public Criteria andUseTimeGreaterThan(Timestamp value) {
			addCriterion("USE_TIME >", value, "useTime");
			return (Criteria) this;
		}

		public Criteria andUseTimeGreaterThanOrEqualTo(Timestamp value) {
			addCriterion("USE_TIME >=", value, "useTime");
			return (Criteria) this;
		}

		public Criteria andUseTimeLessThan(Timestamp value) {
			addCriterion("USE_TIME <", value, "useTime");
			return (Criteria) this;
		}

		public Criteria andUseTimeLessThanOrEqualTo(Timestamp value) {
			addCriterion("USE_TIME <=", value, "useTime");
			return (Criteria) this;
		}

		public Criteria andUseTimeIn(List<Timestamp> values) {
			addCriterion("USE_TIME in", values, "useTime");
			return (Criteria) this;
		}

		public Criteria andUseTimeNotIn(List<Timestamp> values) {
			addCriterion("USE_TIME not in", values, "useTime");
			return (Criteria) this;
		}

		public Criteria andUseTimeBetween(Timestamp value1, Timestamp value2) {
			addCriterion("USE_TIME between", value1, value2, "useTime");
			return (Criteria) this;
		}

		public Criteria andUseTimeNotBetween(Timestamp value1, Timestamp value2) {
			addCriterion("USE_TIME not between", value1, value2, "useTime");
			return (Criteria) this;
		}

		public Criteria andSelectFlagIsNull() {
			addCriterion("SELECT_FLAG is null");
			return (Criteria) this;
		}

		public Criteria andSelectFlagIsNotNull() {
			addCriterion("SELECT_FLAG is not null");
			return (Criteria) this;
		}

		public Criteria andSelectFlagEqualTo(Short value) {
			addCriterion("SELECT_FLAG =", value, "selectFlag");
			return (Criteria) this;
		}

		public Criteria andSelectFlagNotEqualTo(Short value) {
			addCriterion("SELECT_FLAG <>", value, "selectFlag");
			return (Criteria) this;
		}

		public Criteria andSelectFlagGreaterThan(Short value) {
			addCriterion("SELECT_FLAG >", value, "selectFlag");
			return (Criteria) this;
		}

		public Criteria andSelectFlagGreaterThanOrEqualTo(Short value) {
			addCriterion("SELECT_FLAG >=", value, "selectFlag");
			return (Criteria) this;
		}

		public Criteria andSelectFlagLessThan(Short value) {
			addCriterion("SELECT_FLAG <", value, "selectFlag");
			return (Criteria) this;
		}

		public Criteria andSelectFlagLessThanOrEqualTo(Short value) {
			addCriterion("SELECT_FLAG <=", value, "selectFlag");
			return (Criteria) this;
		}

		public Criteria andSelectFlagIn(List<Short> values) {
			addCriterion("SELECT_FLAG in", values, "selectFlag");
			return (Criteria) this;
		}

		public Criteria andSelectFlagNotIn(List<Short> values) {
			addCriterion("SELECT_FLAG not in", values, "selectFlag");
			return (Criteria) this;
		}

		public Criteria andSelectFlagBetween(Short value1, Short value2) {
			addCriterion("SELECT_FLAG between", value1, value2, "selectFlag");
			return (Criteria) this;
		}

		public Criteria andSelectFlagNotBetween(Short value1, Short value2) {
			addCriterion("SELECT_FLAG not between", value1, value2, "selectFlag");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table PORT_CONN_UNIT
	 * @mbg.generated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PORT_CONN_UNIT
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}
