package net.muratec.mcs.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import net.muratec.mcs.entity.common.AjaxDataTablesReqBaseEntity;
import net.muratec.mcs.model.UserAccount;
import net.muratec.mcs.model.UserAccountExample;

public interface UserAccountMapper {

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table USER_ACCOUNT
     * @mbg.generated
     */
    long countByExample(UserAccountExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table USER_ACCOUNT
     * @mbg.generated
     */
    int deleteByExample(UserAccountExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table USER_ACCOUNT
     * @mbg.generated
     */
    int deleteByPrimaryKey(Short userId);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table USER_ACCOUNT
     * @mbg.generated
     */
    int insert(UserAccount record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table USER_ACCOUNT
     * @mbg.generated
     */
    int insertSelective(UserAccount record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table USER_ACCOUNT
     * @mbg.generated
     */
    List<UserAccount> selectByExample(UserAccountExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table USER_ACCOUNT
     * @mbg.generated
     */
    UserAccount selectByPrimaryKey(Short userId);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table USER_ACCOUNT
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") UserAccount record, @Param("example") UserAccountExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table USER_ACCOUNT
     * @mbg.generated
     */
    int updateByExample(@Param("record") UserAccount record, @Param("example") UserAccountExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table USER_ACCOUNT
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(UserAccount record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table USER_ACCOUNT
     * @mbg.generated
     */
    int updateByPrimaryKey(UserAccount record);

    //@formatter:off
    /**
     ******************************************************************************
     * @brief     insertByMaxId Get MAX(USER_ID)+1 and register users function
     * @param     UserAccount record
     * @return
     * @retval
     * @attention
     * @note
     * ----------------------------------------------------------------------------
     * VER.        DESCRIPTION                                               AUTHOR
     * ----------------------------------------------------------------------------
     ******************************************************************************
     */
    //@formatter:on
    int insertByMaxId(UserAccount record);

    //@formatter:off
    /**
     ******************************************************************************
     * @brief     selectList Display User Management Master Maintenance list function
     * @param     reqEntity      Search condition
     * @return    Type of List UserAccount
     * @retval    Return in List format
     * @attention
     * @note
     * ----------------------------------------------------------------------------
     * VER.        DESCRIPTION                                               AUTHOR
     * ----------------------------------------------------------------------------
     ******************************************************************************
     */
    //@formatter:on
    List<UserAccount> selectList(AjaxDataTablesReqBaseEntity reqEntity);

    //@formatter:off
    /**
     ******************************************************************************
     * @brief     insertByNonOverlapId User registration function
     * @param     UserAccount    record
     * @return
     * @retval
     * @attention
     * @note      It assigns the minimum number that does not overlap and registers the user.
     * ----------------------------------------------------------------------------
     * VER.        DESCRIPTION                                               AUTHOR
     * ----------------------------------------------------------------------------
     ******************************************************************************
     */
    //@formatter:on
    int insertByNonOverlapId(UserAccount record);
}
