<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.muratec.mcs.mapper.TransferOpeLogMapper" >
  <resultMap id="BaseResultMap" type="net.muratec.mcs.model.TransferOpeLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    <id column="TIME" property="time" jdbcType="VARCHAR" />
    <id column="TSC_ID" property="tscId" jdbcType="DECIMAL" />
    <id column="SRC_LOC" property="srcLoc" jdbcType="VARCHAR" />
    <id column="DST_LOC" property="dstLoc" jdbcType="VARCHAR" />
    <result column="MIN_TIME" property="minTime" jdbcType="DECIMAL" />
    <result column="MAX_TIME" property="maxTime" jdbcType="DECIMAL" />
    <result column="TOTAL_TIME" property="totalTime" jdbcType="DECIMAL" />
    <result column="OPE_COUNT" property="opeCount" jdbcType="DECIMAL" />
    <result column="ERR_COUNT" property="errCount" jdbcType="DECIMAL" />
    <!-- 20200414 DONG ADD -->
    <result column="mcbf" property="mcbf" jdbcType="DECIMAL" />
    <result column="avg_time" property="avgTime" jdbcType="DECIMAL" />
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    TIME, TSC_ID, SRC_LOC, DST_LOC, MIN_TIME, MAX_TIME, TOTAL_TIME, OPE_COUNT, ERR_COUNT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.muratec.mcs.model.TransferOpeLogExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TRANSFER_OPE_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="net.muratec.mcs.model.TransferOpeLogKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from TRANSFER_OPE_LOG
    where TIME = #{time,jdbcType=VARCHAR}
      and TSC_ID = #{tscId,jdbcType=DECIMAL}
      and SRC_LOC = #{srcLoc,jdbcType=VARCHAR}
      and DST_LOC = #{dstLoc,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="net.muratec.mcs.model.TransferOpeLogKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    delete from TRANSFER_OPE_LOG
    where TIME = #{time,jdbcType=VARCHAR}
      and TSC_ID = #{tscId,jdbcType=DECIMAL}
      and SRC_LOC = #{srcLoc,jdbcType=VARCHAR}
      and DST_LOC = #{dstLoc,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="net.muratec.mcs.model.TransferOpeLogExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    delete from TRANSFER_OPE_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.muratec.mcs.model.TransferOpeLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    insert into TRANSFER_OPE_LOG (TIME, TSC_ID, SRC_LOC, 
      DST_LOC, MIN_TIME, MAX_TIME, 
      TOTAL_TIME, OPE_COUNT, ERR_COUNT
      )
    values (#{time,jdbcType=VARCHAR}, #{tscId,jdbcType=DECIMAL}, #{srcLoc,jdbcType=VARCHAR}, 
      #{dstLoc,jdbcType=VARCHAR}, #{minTime,jdbcType=DECIMAL}, #{maxTime,jdbcType=DECIMAL}, 
      #{totalTime,jdbcType=DECIMAL}, #{opeCount,jdbcType=DECIMAL}, #{errCount,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.muratec.mcs.model.TransferOpeLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    insert into TRANSFER_OPE_LOG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="time != null" >
        TIME,
      </if>
      <if test="tscId != null" >
        TSC_ID,
      </if>
      <if test="srcLoc != null" >
        SRC_LOC,
      </if>
      <if test="dstLoc != null" >
        DST_LOC,
      </if>
      <if test="minTime != null" >
        MIN_TIME,
      </if>
      <if test="maxTime != null" >
        MAX_TIME,
      </if>
      <if test="totalTime != null" >
        TOTAL_TIME,
      </if>
      <if test="opeCount != null" >
        OPE_COUNT,
      </if>
      <if test="errCount != null" >
        ERR_COUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="tscId != null" >
        #{tscId,jdbcType=DECIMAL},
      </if>
      <if test="srcLoc != null" >
        #{srcLoc,jdbcType=VARCHAR},
      </if>
      <if test="dstLoc != null" >
        #{dstLoc,jdbcType=VARCHAR},
      </if>
      <if test="minTime != null" >
        #{minTime,jdbcType=DECIMAL},
      </if>
      <if test="maxTime != null" >
        #{maxTime,jdbcType=DECIMAL},
      </if>
      <if test="totalTime != null" >
        #{totalTime,jdbcType=DECIMAL},
      </if>
      <if test="opeCount != null" >
        #{opeCount,jdbcType=DECIMAL},
      </if>
      <if test="errCount != null" >
        #{errCount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.muratec.mcs.model.TransferOpeLogExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    select count(*) from TRANSFER_OPE_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    update TRANSFER_OPE_LOG
    <set >
      <if test="record.time != null" >
        TIME = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.tscId != null" >
        TSC_ID = #{record.tscId,jdbcType=DECIMAL},
      </if>
      <if test="record.srcLoc != null" >
        SRC_LOC = #{record.srcLoc,jdbcType=VARCHAR},
      </if>
      <if test="record.dstLoc != null" >
        DST_LOC = #{record.dstLoc,jdbcType=VARCHAR},
      </if>
      <if test="record.minTime != null" >
        MIN_TIME = #{record.minTime,jdbcType=DECIMAL},
      </if>
      <if test="record.maxTime != null" >
        MAX_TIME = #{record.maxTime,jdbcType=DECIMAL},
      </if>
      <if test="record.totalTime != null" >
        TOTAL_TIME = #{record.totalTime,jdbcType=DECIMAL},
      </if>
      <if test="record.opeCount != null" >
        OPE_COUNT = #{record.opeCount,jdbcType=DECIMAL},
      </if>
      <if test="record.errCount != null" >
        ERR_COUNT = #{record.errCount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    update TRANSFER_OPE_LOG
    set TIME = #{record.time,jdbcType=VARCHAR},
      TSC_ID = #{record.tscId,jdbcType=DECIMAL},
      SRC_LOC = #{record.srcLoc,jdbcType=VARCHAR},
      DST_LOC = #{record.dstLoc,jdbcType=VARCHAR},
      MIN_TIME = #{record.minTime,jdbcType=DECIMAL},
      MAX_TIME = #{record.maxTime,jdbcType=DECIMAL},
      TOTAL_TIME = #{record.totalTime,jdbcType=DECIMAL},
      OPE_COUNT = #{record.opeCount,jdbcType=DECIMAL},
      ERR_COUNT = #{record.errCount,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.muratec.mcs.model.TransferOpeLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    update TRANSFER_OPE_LOG
    <set >
      <if test="minTime != null" >
        MIN_TIME = #{minTime,jdbcType=DECIMAL},
      </if>
      <if test="maxTime != null" >
        MAX_TIME = #{maxTime,jdbcType=DECIMAL},
      </if>
      <if test="totalTime != null" >
        TOTAL_TIME = #{totalTime,jdbcType=DECIMAL},
      </if>
      <if test="opeCount != null" >
        OPE_COUNT = #{opeCount,jdbcType=DECIMAL},
      </if>
      <if test="errCount != null" >
        ERR_COUNT = #{errCount,jdbcType=DECIMAL},
      </if>
    </set>
    where TIME = #{time,jdbcType=VARCHAR}
      and TSC_ID = #{tscId,jdbcType=DECIMAL}
      and SRC_LOC = #{srcLoc,jdbcType=VARCHAR}
      and DST_LOC = #{dstLoc,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.muratec.mcs.model.TransferOpeLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 09 15:17:50 CST 2020.
    -->
    update TRANSFER_OPE_LOG
    set MIN_TIME = #{minTime,jdbcType=DECIMAL},
      MAX_TIME = #{maxTime,jdbcType=DECIMAL},
      TOTAL_TIME = #{totalTime,jdbcType=DECIMAL},
      OPE_COUNT = #{opeCount,jdbcType=DECIMAL},
      ERR_COUNT = #{errCount,jdbcType=DECIMAL}
    where TIME = #{time,jdbcType=VARCHAR}
      and TSC_ID = #{tscId,jdbcType=DECIMAL}
      and SRC_LOC = #{srcLoc,jdbcType=VARCHAR}
      and DST_LOC = #{dstLoc,jdbcType=VARCHAR}
  </update>
  
  <!-- STD 2020.04.09 DONG  ADD -->
  <!-- 以下独自SQL -->
  
       <resultMap id="SearchTscResultMap" type="net.muratec.mcs.model.Tsc">
	  <id 	column="TSC_ID" 		  jdbcType="DECIMAL" property="tscId" />
	  <result column="TSC_ABBREVIATION" jdbcType="VARCHAR" property="tscAbbreviation" />
	  <result column="TSC_TYPE" 		  jdbcType="VARCHAR" property="tscType" />
	  <result column="EXEC_SID" jdbcType="DECIMAL" property="execSid" />
	  <result column="LLC_SID" jdbcType="DECIMAL" property="llcSid" />
	  </resultMap>
    <select id="selectTscNameList" parameterType="net.muratec.mcs.model.Tsc" resultMap="SearchTscResultMap">
       SELECT tsc_abbreviation,
			  tsc_id,
			  tsc_type,
			  exec_sid,
			  llc_sid
	   FROM   tsc
	   WHERE  tsc_type IS NOT NULL
	   ORDER BY 1
    </select>
    <resultMap id="SearchOhbResultMap" type="net.muratec.mcs.model.Ohb">
	  <id column="OHB_ID" jdbcType="VARCHAR" property="ohbId" />
	</resultMap>
    <select id="selectOhbData" parameterType="net.muratec.mcs.model.Ohb" resultMap="SearchOhbResultMap">
        SELECT ohb_id,
			   ohb_id,
		   	   'OHB' 
	    FROM   ohb 
	    ORDER BY 1
    </select>
    
    <resultMap id="SearchZoneResultMap" type="net.muratec.mcs.model.StockerZoneRlt">
	  <id column="ZONE_ID" property="zoneId" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="tscIdWhere">
    <where>
      <if test="tscId != null and tscId !='' ">
        tsc_id = #{tscId}
      </if>
    </where>
    </sql>
    <select id="selectZoneData" parameterType="java.lang.String" resultMap="SearchZoneResultMap">
        SELECT zone_id, zone_id 
		FROM stocker_zone_rlt 
		<!-- WHERE tsc_id = #{tscId,jdbcType=DECIMAL}  -->
		<include refid="tscIdWhere" />
		ORDER BY 1
    </select>
    <resultMap id="SearchPortResultMap" type="net.muratec.mcs.model.Port">
	  <id column="PORT_ID" jdbcType="VARCHAR" property="portId" />
	  <result column="PORT_ABBREVIATION" jdbcType="VARCHAR" property="portAbbreviation" />
	</resultMap>
	<sql id="portWhere">
	    <where>
	      <if test="tscId != null and tscId !='' ">
	        conn_from_tsc_id  = #{tscId}
	        OR conn_to_tsc_id = #{tscId}
	      </if>
	    </where>
    </sql>
    <select id="selectPortData" parameterType="java.lang.String" resultMap="SearchPortResultMap">
        SELECT DISTINCT port_abbreviation,port_id
		FROM port
		WHERE port_id IN
					  (SELECT port_id
					  FROM port_conn
					 <!-- WHERE conn_from_tsc_id = #{tscId,jdbcType=VARCHAR}
					  OR conn_to_tsc_id      = #{tscId,jdbcType=VARCHAR}-->
					   <include refid="portWhere" /> 
					  )
		ORDER BY 1
    </select>
    
    <!-- 日単位で、TSCIDのみ指定した場合のクエリー  -->
    <sql id="selectRecordWhere">
    <where>
      <if test="fromRecordNum != null and toRecordNum != null">
       rn between #{fromRecordNum,jdbcType=DECIMAL} and #{toRecordNum,jdbcType=DECIMAL}
      </if>
    </where>
    </sql>
	<sql id="DayJobWhere">
	    <where>
	      <if test="tscId != null and tscId !='' ">
	        tsc_id  = #{tscId}
	      </if>
	      <if test="source != null and source !='' ">
	        and src_loc = #{source}
	      </if>
	      <if test="destination != null and destination !='' ">
	        and dst_loc = #{destination}
	      </if>
	      <if test="dateFrom != null">
	        and time &gt;= to_char(#{dateFrom},'yyyymmddhh24missff')
	      </if>
	      <if test="dateTo != null">
	        and time &lt; to_char(#{dateTo},'yyyymmddhh24missff')
	      </if>
	    </where>
    </sql>
    <select id="getCountDayJobByTscIdData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultType="java.lang.Integer">
         SELECT    count(*)
			FROM(
	     		SELECT 
				   time,
				   time,
				   tsc_id,
				   '',
				   '',
				   MAX( max_time ) max_time,
				   MIN( min_time ) min_time,
				   ROUND( ( CASE SUM( ope_count )
								WHEN 0 THEN 0
								ELSE SUM( total_time )/SUM( ope_count )
							END ), 0 ) avg_time,
				   SUM( total_time ) total_time,
				   SUM( ope_count ) ope_count,
				   SUM( err_count ) err_count,
				   ROUND( ( CASE SUM( err_count )
								WHEN 0 THEN SUM( ope_count)/1
								ELSE SUM( ope_count )/SUM( err_count )
							END ), 0 ) mcbf
			FROM  (
		      				SELECT 0,
								   (substr(TIME,0,8) || '000000') TIME,
								   TO_CHAR(tsc_id) tsc_id,
								   '',
								   '',
								   MAX(max_time) max_time,
								   MIN(min_time) min_time,
								   ROUND( ( CASE SUM( ope_count )
												WHEN 0 THEN 0
												ELSE SUM( total_time )/SUM( ope_count )
											END ), 0 ) avg_time,
								   SUM(total_time) total_time,
								   SUM(ope_count) ope_count,
								   SUM(err_count) err_count,
								   ROUND( ( CASE SUM( err_count )
												WHEN 0 THEN SUM( ope_count)/1
												ELSE SUM( ope_count )/SUM( err_count )
											END ), 0 ) mcbf
							FROM   transfer_ope_log
						  	<!-- WHERE  time >= '2020032715' AND  time < '2020041717' and src_loc = 'ASHP23-09-P2' -->
						  	<include refid="DayJobWhere" /> 
							GROUP BY tsc_id,time
		          )
			<include refid="DayJobWhere" /> 
			GROUP BY tsc_id,time
			)
    </select>
    <select id="selectDayJobByTscIdData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultMap="BaseResultMap">
         SELECT    rn,
				  TIME,
				  tsc_id,
				  '',
				  '',
				  max_time,
				  min_time,
				  avg_time,
				  total_time,
				  ope_count,
				  err_count,
				  mcbf
			FROM(
	     		SELECT 
	     		   row_number() over(partition  by tsc_id,time  order by tsc_id,time  ) rn,
				   time,
				   time,
				   tsc_id,
				   '',
				   '',
				   MAX( max_time ) max_time,
				   MIN( min_time ) min_time,
				   ROUND( ( CASE SUM( ope_count )
								WHEN 0 THEN 0
								ELSE SUM( total_time )/SUM( ope_count )
							END ), 0 ) avg_time,
				   SUM( total_time ) total_time,
				   SUM( ope_count ) ope_count,
				   SUM( err_count ) err_count,
				   ROUND( ( CASE SUM( err_count )
								WHEN 0 THEN SUM( ope_count)/1
								ELSE SUM( ope_count )/SUM( err_count )
							END ), 0 ) mcbf
			FROM  (
		      				SELECT 0,
								   (substr(TIME,0,8) || '000000') TIME,
								   TO_CHAR(tsc_id) tsc_id,
								   '',
								   '',
								   MAX(max_time) max_time,
								   MIN(min_time) min_time,
								   ROUND( ( CASE SUM( ope_count )
												WHEN 0 THEN 0
												ELSE SUM( total_time )/SUM( ope_count )
											END ), 0 ) avg_time,
								   SUM(total_time) total_time,
								   SUM(ope_count) ope_count,
								   SUM(err_count) err_count,
								   ROUND( ( CASE SUM( err_count )
												WHEN 0 THEN SUM( ope_count)/1
												ELSE SUM( ope_count )/SUM( err_count )
											END ), 0 ) mcbf
							FROM   transfer_ope_log
						  	<!-- WHERE  time >= '2020032715' AND  time < '2020041717' and src_loc = 'ASHP23-09-P2' -->
						  	<include refid="DayJobWhere" /> 
							GROUP BY tsc_id,time
		          )
			<include refid="DayJobWhere" /> 
			GROUP BY tsc_id,time
			)
       		 <include refid="selectRecordWhere" />
    </select>
    <select id="getCountDayJobBySrcLocData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultType="java.lang.Integer">
         SELECT    count(*)
			FROM(
	     		SELECT 
				   time,
				   tsc_id,
				   src_loc,
				   '',
				   MAX( max_time ) max_time,
				   MIN( min_time ) min_time,
				   ROUND( ( CASE SUM( ope_count )
								WHEN 0 THEN 0
								ELSE SUM( total_time )/SUM( ope_count )
							END ), 0 ) avg_time,
				   SUM( total_time ) total_time,
				   SUM( ope_count ) ope_count,
				   SUM( err_count ) err_count,
				   ROUND( ( CASE SUM( err_count )
								WHEN 0 THEN SUM( ope_count)/1
								ELSE SUM( ope_count )/SUM( err_count )
							END ), 0 ) mcbf
			FROM  (
		      				SELECT 0,
								   ( substr(time,0,8) || '000000' ) time,
								   TO_CHAR(tsc_id) tsc_id,
								   src_loc,
								   '',
								   MAX(max_time) max_time,
								   MIN(min_time) min_time,
								   ROUND( ( CASE SUM( ope_count )
												WHEN 0 THEN 0
												ELSE SUM( total_time )/SUM( ope_count )
											END ), 0 ) avg_time,
								   SUM(total_time) total_time,
								   SUM(ope_count) ope_count,
								   SUM(err_count) err_count,
								   ROUND( ( CASE SUM( err_count )
												WHEN 0 THEN SUM( ope_count)/1
												ELSE SUM( ope_count )/SUM( err_count )
											END ), 0 ) mcbf
							FROM   transfer_ope_log
						  	<include refid="DayJobWhere" /> 
							GROUP BY tsc_id,time,src_loc
		          )
			<include refid="DayJobWhere" /> 
			GROUP BY tsc_id,time,src_loc
			)
    </select>
    <select id="selectDayJobBySrcLocData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultMap="BaseResultMap">
         SELECT    rn,
				  TIME,
				  tsc_id,
				  src_loc,
				  '',
				  max_time,
				  min_time,
				  avg_time,
				  total_time,
				  ope_count,
				  err_count,
				  mcbf
			FROM(
	     		SELECT 
	     		   row_number() over(partition  by tsc_id,time,src_loc,dst_loc order by tsc_id,time,src_loc,dst_loc ) rn,
				   time,
				   tsc_id,
				   src_loc,
				   '',
				   MAX( max_time ) max_time,
				   MIN( min_time ) min_time,
				   ROUND( ( CASE SUM( ope_count )
								WHEN 0 THEN 0
								ELSE SUM( total_time )/SUM( ope_count )
							END ), 0 ) avg_time,
				   SUM( total_time ) total_time,
				   SUM( ope_count ) ope_count,
				   SUM( err_count ) err_count,
				   ROUND( ( CASE SUM( err_count )
								WHEN 0 THEN SUM( ope_count)/1
								ELSE SUM( ope_count )/SUM( err_count )
							END ), 0 ) mcbf
			FROM  (
		      				SELECT 0,
								   ( substr(time,0,8) || '000000' ) time,
								   TO_CHAR(tsc_id) tsc_id,
								   src_loc,
								   '',
								   MAX(max_time) max_time,
								   MIN(min_time) min_time,
								   ROUND( ( CASE SUM( ope_count )
												WHEN 0 THEN 0
												ELSE SUM( total_time )/SUM( ope_count )
											END ), 0 ) avg_time,
								   SUM(total_time) total_time,
								   SUM(ope_count) ope_count,
								   SUM(err_count) err_count,
								   ROUND( ( CASE SUM( err_count )
												WHEN 0 THEN SUM( ope_count)/1
												ELSE SUM( ope_count )/SUM( err_count )
											END ), 0 ) mcbf
							FROM   transfer_ope_log
						  	<include refid="DayJobWhere" /> 
							GROUP BY tsc_id,time,src_loc
		          )
			<include refid="DayJobWhere" /> 
			GROUP BY tsc_id,time,src_loc
			)
       		 <include refid="selectRecordWhere" />
    </select>
    <select id="selectDayJobByDstLocData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultMap="BaseResultMap">
         SELECT    rn,
				  TIME,
				  tsc_id,
				  '',
				  dst_loc,
				  max_time,
				  min_time,
				  avg_time,
				  total_time,
				  ope_count,
				  err_count,
				  mcbf
			FROM(
	     		SELECT 
	     		   row_number() over(partition  by tsc_id,time,src_loc,dst_loc order by tsc_id,time,src_loc,dst_loc ) rn,
				   time,
				   tsc_id,
				   '',
				   dst_loc,
				   MAX( max_time ) max_time,
				   MIN( min_time ) min_time,
				   ROUND( ( CASE SUM( ope_count )
								WHEN 0 THEN 0
								ELSE SUM( total_time )/SUM( ope_count )
							END ), 0 ) avg_time,
				   SUM( total_time ) total_time,
				   SUM( ope_count ) ope_count,
				   SUM( err_count ) err_count,
				   ROUND( ( CASE SUM( err_count )
								WHEN 0 THEN SUM( ope_count)/1
								ELSE SUM( ope_count )/SUM( err_count )
							END ), 0 ) mcbf
			FROM  (
		      				SELECT 0,
								   ( substr(time,0,8) || '000000' ) time,
								   TO_CHAR(tsc_id) tsc_id,
								   '',
								   dst_loc,
								   MAX(max_time) max_time,
								   MIN(min_time) min_time,
								   ROUND( ( CASE SUM( ope_count )
												WHEN 0 THEN 0
												ELSE SUM( total_time )/SUM( ope_count )
											END ), 0 ) avg_time,
								   SUM(total_time) total_time,
								   SUM(ope_count) ope_count,
								   SUM(err_count) err_count,
								   ROUND( ( CASE SUM( err_count )
												WHEN 0 THEN SUM( ope_count)/1
												ELSE SUM( ope_count )/SUM( err_count )
											END ), 0 ) mcbf
							FROM   transfer_ope_log
						  	<include refid="DayJobWhere" /> 
							GROUP BY tsc_id,time,dst_loc
		          )
			<include refid="DayJobWhere" /> 
			GROUP BY tsc_id,time,dst_loc
			)
       		 <include refid="selectRecordWhere" />
    </select>
    <select id="getCountDayJobByDstLocData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultType="java.lang.Integer">
         SELECT   count(*)
			FROM(
	     		SELECT 
				   time,
				   tsc_id,
				   '',
				   dst_loc,
				   MAX( max_time ) max_time,
				   MIN( min_time ) min_time,
				   ROUND( ( CASE SUM( ope_count )
								WHEN 0 THEN 0
								ELSE SUM( total_time )/SUM( ope_count )
							END ), 0 ) avg_time,
				   SUM( total_time ) total_time,
				   SUM( ope_count ) ope_count,
				   SUM( err_count ) err_count,
				   ROUND( ( CASE SUM( err_count )
								WHEN 0 THEN SUM( ope_count)/1
								ELSE SUM( ope_count )/SUM( err_count )
							END ), 0 ) mcbf
			FROM  (
		      				SELECT 0,
								   ( substr(time,0,8) || '000000' ) time,
								   TO_CHAR(tsc_id) tsc_id,
								   '',
								   dst_loc,
								   MAX(max_time) max_time,
								   MIN(min_time) min_time,
								   ROUND( ( CASE SUM( ope_count )
												WHEN 0 THEN 0
												ELSE SUM( total_time )/SUM( ope_count )
											END ), 0 ) avg_time,
								   SUM(total_time) total_time,
								   SUM(ope_count) ope_count,
								   SUM(err_count) err_count,
								   ROUND( ( CASE SUM( err_count )
												WHEN 0 THEN SUM( ope_count)/1
												ELSE SUM( ope_count )/SUM( err_count )
											END ), 0 ) mcbf
							FROM   transfer_ope_log
						  	<include refid="DayJobWhere" /> 
							GROUP BY tsc_id,time,dst_loc
		          )
			<include refid="DayJobWhere" /> 
			GROUP BY tsc_id,time,dst_loc
			)
    </select>
    <select id="getCountDayJobData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultType="java.lang.Integer">
        SELECT    count(*)
			FROM(
	     		SELECT 
				   time,
				   tsc_id,
				   src_loc,
				   dst_loc,
				   MAX( max_time ) max_time,
				   MIN( min_time ) min_time,
				   ROUND( ( CASE SUM( ope_count )
								WHEN 0 THEN 0
								ELSE SUM( total_time )/SUM( ope_count )
							END ), 0 ) avg_time,
				   SUM( total_time ) total_time,
				   SUM( ope_count ) ope_count,
				   SUM( err_count ) err_count,
				   ROUND( ( CASE SUM( err_count )
								WHEN 0 THEN SUM( ope_count)/1
								ELSE SUM( ope_count )/SUM( err_count )
							END ), 0 ) mcbf
			FROM  (
		      				SELECT 0,
								   ( substr(time,0,8) || '000000' ) time,
								   TO_CHAR(tsc_id) tsc_id,
								   src_loc,
								   dst_loc,
								   MAX(max_time) max_time,
								   MIN(min_time) min_time,
								   ROUND( ( CASE SUM( ope_count )
												WHEN 0 THEN 0
												ELSE SUM( total_time )/SUM( ope_count )
											END ), 0 ) avg_time,
								   SUM(total_time) total_time,
								   SUM(ope_count) ope_count,
								   SUM(err_count) err_count,
								   ROUND( ( CASE SUM( err_count )
												WHEN 0 THEN SUM( ope_count)/1
												ELSE SUM( ope_count )/SUM( err_count )
											END ), 0 ) mcbf
							FROM   transfer_ope_log
						  	<include refid="DayJobWhere" /> 
							GROUP BY tsc_id,time,src_loc,dst_loc
		          )
				<include refid="DayJobWhere" /> 
				GROUP BY tsc_id,time,src_loc,dst_loc
			)
    </select>
    <select id="selectDayJobData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultMap="BaseResultMap">
        SELECT    rn,
				  TIME,
				  tsc_id,
				  src_loc,
				  dst_loc,
				  max_time,
				  min_time,
				  avg_time,
				  total_time,
				  ope_count,
				  err_count,
				  mcbf
			FROM(
	     		SELECT 
	     		   row_number() over(partition  by tsc_id,time,src_loc,dst_loc order by tsc_id,time,src_loc,dst_loc ) rn,
				   time,
				   tsc_id,
				   src_loc,
				   dst_loc,
				   MAX( max_time ) max_time,
				   MIN( min_time ) min_time,
				   ROUND( ( CASE SUM( ope_count )
								WHEN 0 THEN 0
								ELSE SUM( total_time )/SUM( ope_count )
							END ), 0 ) avg_time,
				   SUM( total_time ) total_time,
				   SUM( ope_count ) ope_count,
				   SUM( err_count ) err_count,
				   ROUND( ( CASE SUM( err_count )
								WHEN 0 THEN SUM( ope_count)/1
								ELSE SUM( ope_count )/SUM( err_count )
							END ), 0 ) mcbf
			FROM  (
		      				SELECT 0,
								   ( substr(time,0,8) || '000000' ) time,
								   TO_CHAR(tsc_id) tsc_id,
								   src_loc,
								   dst_loc,
								   MAX(max_time) max_time,
								   MIN(min_time) min_time,
								   ROUND( ( CASE SUM( ope_count )
												WHEN 0 THEN 0
												ELSE SUM( total_time )/SUM( ope_count )
											END ), 0 ) avg_time,
								   SUM(total_time) total_time,
								   SUM(ope_count) ope_count,
								   SUM(err_count) err_count,
								   ROUND( ( CASE SUM( err_count )
												WHEN 0 THEN SUM( ope_count)/1
												ELSE SUM( ope_count )/SUM( err_count )
											END ), 0 ) mcbf
							FROM   transfer_ope_log
						  	<include refid="DayJobWhere" /> 
							GROUP BY tsc_id,time,src_loc,dst_loc
		          )
				<include refid="DayJobWhere" /> 
				GROUP BY tsc_id,time,src_loc,dst_loc
			)
       		 <include refid="selectRecordWhere" />
    </select>
    <sql id="HourJobWhere">
	    <where>
	      <if test="tscId != null and tscId !='' ">
	        tsc_id  = #{tscId}
	      </if>
	      <if test="source != null and source !='' ">
	        and src_loc = #{source}
	      </if>
	      <if test="destination != null and destination !='' ">
	        and dst_loc = #{destination}
	      </if>
	      <if test="dateFrom != null">
	        and time &gt;= to_char(#{dateFrom},'yyyymmddhh')
	      </if>
	      <if test="dateTo != null">
	        and time &lt; to_char(#{dateTo},'yyyymmddhh')
	      </if>
	    </where>
    </sql>
    <select id="getCountHourJobByTscIdData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultType="java.lang.Integer"> 
	   SELECT  
		  count(*)
	   FROM(
	   		SELECT 
					   (substr(time,0,10) || '0000' ) time,
					   TO_CHAR(tsc_id) tsc_id,
					   '',
					   '',
					   MAX(max_time) max_time,
					   MIN(min_time) min_time,
					   ROUND( ( CASE SUM( ope_count )
									WHEN 0 THEN 0
									ELSE SUM( total_time )/SUM( ope_count )
								END ), 0 ) avg_time,
					   SUM(total_time) total_time,
					   SUM(ope_count) ope_count,
					   SUM(err_count) err_count,
					   ROUND( ( CASE SUM( err_count )
									WHEN 0 THEN SUM( ope_count)/1
									ELSE SUM( ope_count )/SUM( err_count )
								END ), 0 ) mcbf
				FROM   transfer_ope_log
			  	<include refid="HourJobWhere" /> 
				GROUP BY tsc_id,time
	   )
    </select>
    <select id="selectHourJobByTscIdData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultMap="BaseResultMap">
        SELECT     rn, 
				   time,
				   tsc_id,
				   '',
				   '',
				   max_time,
				   min_time,
				   avg_time,
				   total_time,
				   ope_count,
				   err_count,
				   mcbf
			FROM(
	     				SELECT 
	     				   row_number() over(partition  by tsc_id,time order by tsc_id,time ) rn,
						   (substr(time,0,10) || '0000' ) time,
						   TO_CHAR(tsc_id) tsc_id,
						   '',
						   '',
						   MAX(max_time) max_time,
						   MIN(min_time) min_time,
						   ROUND( ( CASE SUM( ope_count )
										WHEN 0 THEN 0
										ELSE SUM( total_time )/SUM( ope_count )
									END ), 0 ) avg_time,
						   SUM(total_time) total_time,
						   SUM(ope_count) ope_count,
						   SUM(err_count) err_count,
						   ROUND( ( CASE SUM( err_count )
										WHEN 0 THEN SUM( ope_count)/1
										ELSE SUM( ope_count )/SUM( err_count )
									END ), 0 ) mcbf
					FROM   transfer_ope_log
				  	<include refid="HourJobWhere" /> 
					GROUP BY tsc_id,time
		    	 )
       		 <include refid="selectRecordWhere" />
    </select>
    <select id="getCountHourJobBySrcLocData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultType="java.lang.Integer">
        SELECT    count(*)
			FROM(
	     				SELECT 
						   ( substr(time,0,10) || '0000' ) time,
						   TO_CHAR(tsc_id) tsc_id,
						   src_loc,
						   '',
						   MAX(max_time) max_time,
						   MIN(min_time) min_time,
						   ROUND( ( CASE SUM( ope_count )
										WHEN 0 THEN 0
										ELSE SUM( total_time )/SUM( ope_count )
									END ), 0 ) avg_time,
						   SUM(total_time) total_time,
						   SUM(ope_count) ope_count,
						   SUM(err_count) err_count,
						   ROUND( ( CASE SUM( err_count )
										WHEN 0 THEN SUM( ope_count)/1
										ELSE SUM( ope_count )/SUM( err_count )
									END ), 0 ) mcbf
					FROM   transfer_ope_log
				  	<include refid="HourJobWhere" /> 
					GROUP BY tsc_id,time,src_loc
		    	 )
    </select>
    <select id="selectHourJobBySrcLocData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultMap="BaseResultMap">
        SELECT    rn, 
				  time,
				  tsc_id,
				  src_loc,
				  '',
				  max_time,
				  min_time,
				  avg_time,
				  total_time,
				  ope_count,
				  err_count,
				  mcbf
			FROM(
	     				SELECT 
	     					   row_number() over(partition  by tsc_id,time,src_loc order by tsc_id,time,src_loc ) rn,
						   ( substr(time,0,10) || '0000' ) time,
						   TO_CHAR(tsc_id) tsc_id,
						   src_loc,
						   '',
						   MAX(max_time) max_time,
						   MIN(min_time) min_time,
						   ROUND( ( CASE SUM( ope_count )
										WHEN 0 THEN 0
										ELSE SUM( total_time )/SUM( ope_count )
									END ), 0 ) avg_time,
						   SUM(total_time) total_time,
						   SUM(ope_count) ope_count,
						   SUM(err_count) err_count,
						   ROUND( ( CASE SUM( err_count )
										WHEN 0 THEN SUM( ope_count)/1
										ELSE SUM( ope_count )/SUM( err_count )
									END ), 0 ) mcbf
					FROM   transfer_ope_log
				  	<include refid="HourJobWhere" /> 
					GROUP BY tsc_id,time,src_loc
		    	 )
       		 <include refid="selectRecordWhere" />
    </select>
    <select id="getCountHourJobByDstLocData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultType="java.lang.Integer">
       SELECT     count(*)
			FROM(
	     				SELECT 
						   (substr(time,0,10) || '0000') time,
						   TO_CHAR(tsc_id) tsc_id,
						   '',
						   dst_loc,
						   MAX(max_time) max_time,
						   MIN(min_time) min_time,
						   ROUND( ( CASE SUM( ope_count )
										WHEN 0 THEN 0
										ELSE SUM( total_time )/SUM( ope_count )
									END ), 0 ) avg_time,
						   SUM(total_time) total_time,
						   SUM(ope_count) ope_count,
						   SUM(err_count) err_count,
						   ROUND( ( CASE SUM( err_count )
										WHEN 0 THEN SUM( ope_count)/1
										ELSE SUM( ope_count )/SUM( err_count )
									END ), 0 ) mcbf
					FROM   transfer_ope_log
				  	<include refid="HourJobWhere" /> 
					GROUP BY tsc_id,time,dst_loc
		    	 )
    </select>
    <select id="selectHourJobByDstLocData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultMap="BaseResultMap">
       SELECT     rn, 
				  time,
				  tsc_id,
				  '',
				  dst_loc,
				  max_time,
				  min_time,
				  avg_time,
				  total_time,
				  ope_count,
				  err_count,
				  mcbf
			FROM(
	     				SELECT 
	     				   row_number() over(partition  by tsc_id,time,dst_loc order by tsc_id,time,dst_loc ) rn,
						   (substr(time,0,10) || '0000') time,
						   TO_CHAR(tsc_id) tsc_id,
						   '',
						   dst_loc,
						   MAX(max_time) max_time,
						   MIN(min_time) min_time,
						   ROUND( ( CASE SUM( ope_count )
										WHEN 0 THEN 0
										ELSE SUM( total_time )/SUM( ope_count )
									END ), 0 ) avg_time,
						   SUM(total_time) total_time,
						   SUM(ope_count) ope_count,
						   SUM(err_count) err_count,
						   ROUND( ( CASE SUM( err_count )
										WHEN 0 THEN SUM( ope_count)/1
										ELSE SUM( ope_count )/SUM( err_count )
									END ), 0 ) mcbf
					FROM   transfer_ope_log
				  	<include refid="HourJobWhere" /> 
					GROUP BY tsc_id,time,dst_loc
		    	 )
       		 <include refid="selectRecordWhere" />
    </select>
    <select id="getCountHourJobData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultType="java.lang.Integer">
        SELECT    count(*)
			FROM(
	     				SELECT 
						   ( time || '0000' ) time,
						   TO_CHAR(tsc_id) tsc_id,
						   src_loc,
						   dst_loc,
						   MAX(max_time) max_time,
						   MIN(min_time) min_time,
						   ROUND( ( CASE SUM( ope_count )
										WHEN 0 THEN 0
										ELSE SUM( total_time )/SUM( ope_count )
									END ), 0 ) avg_time,
						   SUM(total_time) total_time,
						   SUM(ope_count) ope_count,
						   SUM(err_count) err_count,
						   ROUND( ( CASE SUM( err_count )
										WHEN 0 THEN SUM( ope_count)/1
										ELSE SUM( ope_count )/SUM( err_count )
									END ), 0 ) mcbf
					FROM   transfer_ope_log
				  	<include refid="HourJobWhere" /> 
					GROUP BY tsc_id,time,src_loc,dst_loc
		    	 )
    </select>
    <select id="selectHourJobData" parameterType="net.muratec.mcs.model.TransferOpeLog" resultMap="BaseResultMap">
        SELECT    rn,
				  TIME,
				  tsc_id,
				  src_loc,
				  dst_loc,
				  max_time,
				  min_time,
				  avg_time,
				  total_time,
				  ope_count,
				  err_count,
				  mcbf
			FROM(
	     				SELECT 
	     				   row_number() over(partition  by tsc_id,time,src_loc,dst_loc order by tsc_id,time,src_loc,dst_loc ) rn,
						   ( time || '0000' ) time,
						   TO_CHAR(tsc_id) tsc_id,
						   src_loc,
						   dst_loc,
						   MAX(max_time) max_time,
						   MIN(min_time) min_time,
						   ROUND( ( CASE SUM( ope_count )
										WHEN 0 THEN 0
										ELSE SUM( total_time )/SUM( ope_count )
									END ), 0 ) avg_time,
						   SUM(total_time) total_time,
						   SUM(ope_count) ope_count,
						   SUM(err_count) err_count,
						   ROUND( ( CASE SUM( err_count )
										WHEN 0 THEN SUM( ope_count)/1
										ELSE SUM( ope_count )/SUM( err_count )
									END ), 0 ) mcbf
					FROM   transfer_ope_log
				  	<include refid="HourJobWhere" /> 
					GROUP BY tsc_id,time,src_loc,dst_loc
		    	 )
       		 <include refid="selectRecordWhere" />
    </select>
  <!-- END 2020.04.09 DONG  ADD -->
</mapper>