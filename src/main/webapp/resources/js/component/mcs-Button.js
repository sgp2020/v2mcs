/**
 ******************************************************************************
 * @file        mcs-Button.js
 * @brief       ボタンイベントを管理する部品
 * @par
 * @author      CSC
 * $Id:         $
 * @attention
 *
 * Copyright (c) 2016 MURATA MACHINERY,LTD. All rights reserved.
 *
 * @note        Tabstop=2
 * ----------------------------------------------------------------------------
 * DATE       VER.        DESCRIPTION                                    AUTHOR
 * ----------------------------------------------------------------------------
 * 2016/12/26 0.1         Step1リリース                                     CSC
 ******************************************************************************
 */
/**
 ******************************************************************************
 * @brief ボタンコンポーネント機能
 * @param {jQuery} containerDiv 格納先のdiv要素
 * @param {String} text ボタンのテキスト
 * @param {Object} attr inputに追加適用する属性
 * @param {Object} prop inputに追加適用する属性
 * @attention
 * @note ボタンに要素と属性を付属させる
 * ----------------------------------------------------------------------------
 *  VER.        DESCRIPTION                                               AUTHOR
 *   ----------------------------------------------------------------------------
 ******************************************************************************
 */
var McsButton = function(containerDiv, text, attr, prop) {
  // コンストラクタ
  this.init(containerDiv, text, attr, prop);
};

// メソッド類
McsButton.prototype = {

  /**
   ******************************************************************************
   * @brief 初期化機能
   * @param {jQuery} containerDiv 格納先のdiv要素
   * @param {String} text ボタンのテキスト
   * @param {Object} attr inputに追加適用する属性
   * @param {Object} prop inputに追加適用する属性
   * @attention
   * @note 初期化処理にてアクセス権限による活性・非活性処理を実施する。
   * ----------------------------------------------------------------------------
   *  VER.        DESCRIPTION                                               AUTHOR
   *   ----------------------------------------------------------------------------
   ******************************************************************************
   */
  init: function(containerDiv, text, attr, prop) {
    this.containerDiv = containerDiv;
    // 実際の要素を生成
    var input = $('<button class="btn btn-default mcs-button"></button>');
    input.text(text);
    if (attr)
      input.attr(attr);
    if (prop)
      input.prop(prop);

    // アクセス権限を取得しアクセス権限のないボタンは非活性とする。
    if (this.containerDiv.attr('data-auth') == 'false') {
      input.prop('disabled', true);
    }

    this.input = input;
    // containerDivに追加する
    containerDiv.append(input);
  },
  /**
   ******************************************************************************
   * @brief クリック時の動作を設定する機能
   * @param {Function} callback クリック時のコールバック
   * @return {jQueryObj} button要素
   * @retval
   * @attention
   * @note クリック時の動作を設定
   * ----------------------------------------------------------------------------
   *  VER.        DESCRIPTION                                               AUTHOR
   *   ----------------------------------------------------------------------------
   ******************************************************************************
   */
  onClick: function(callback) {
    return this.input.on('click', callback);
  },

  /**
   ******************************************************************************
   * @brief クリック時イベント設定クリア処理
   * @return {jQueryObj} button要素
   * @retval
   * @attention
   * @note クリック時のイベント設定をクリアする。
   * ----------------------------------------------------------------------------
   *  VER.        DESCRIPTION                                               AUTHOR
   *   ----------------------------------------------------------------------------
   ******************************************************************************
   */
  clearOnClick: function() {
    return this.input.off('click');
  },
  /**
   ******************************************************************************
   * @brief 活性・非活性設定処理
   * @param {Boolean} enabled 活性ならtrue、非活性ならfalse
   * @return {McsButton} このコンポーネント
   * @retval
   * @attention
   * @note 活性・非活性を設定する。※アクセス権限が有る場合のみ実行
   * ----------------------------------------------------------------------------
   *  VER.        DESCRIPTION                                               AUTHOR
   *   ----------------------------------------------------------------------------
   ******************************************************************************
   */
  setEnabled: function(enabled) {
    // アクセス権限のないボタンは活性・非活性の制御はスルー
    if (this.containerDiv.attr('data-auth') == 'false') {
      return this;
    }
    this.input.prop('disabled', !enabled);
    return this;
  },

  /**
   ******************************************************************************
   * @brief 活性・非活性取得処理
   * @return {Boolean} enabled 活性ならtrue、非活性ならfalse
   * @retval
   * @attention
   * @note 活性・非活性を取得する。
   * ----------------------------------------------------------------------------
   *  VER.        DESCRIPTION                                               AUTHOR
   *   ----------------------------------------------------------------------------
   ******************************************************************************
   */
  getEnabled: function() {
    return !this.input.prop('disabled');
  },

  /**
   ******************************************************************************
   * @brief ボタン表示処理
   * @return {McsButton} このコンポーネント
   * @retval
   * @attention
   * @note ボタンを表示する。
   * ----------------------------------------------------------------------------
   *  VER.        DESCRIPTION                                               AUTHOR
   *   ----------------------------------------------------------------------------
   ******************************************************************************
   */
  show: function() {
    this.containerDiv.show();
    return this;
  },

  /**
   ******************************************************************************
   * @brief ボタン非表示処理
   * @return {McsButton} このコンポーネント
   * @retval
   * @attention
   * @note ボタンを非表示する。
   * ----------------------------------------------------------------------------
   *  VER.        DESCRIPTION                                               AUTHOR
   *   ----------------------------------------------------------------------------
   ******************************************************************************
   */
  hide: function() {
    this.containerDiv.hide();
    return this;
  },

  /**
   ******************************************************************************
   * @brief input要素のjQueryオブジェクトを返す機能
   * @return {jQueryObj} button要素
   * @retval
   * @attention
   * @note 注意：なるべく使用しないこと
   * ----------------------------------------------------------------------------
   *  VER.        DESCRIPTION                                               AUTHOR
   *   ----------------------------------------------------------------------------
   *******************************************************************************
   */
  getJq: function() {
    return this.input;
  },

  end: 'end' // 終端ダミー
};
