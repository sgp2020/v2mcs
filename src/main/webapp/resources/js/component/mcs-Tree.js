/**
 ******************************************************************************
 * @file        mcs-Tree.js
 * @brief       ツリーに関する部品
 * @par
 * @author      CSC
 * $Id:         $
 * @attention
 *
 * Copyright (c) 2016 MURATA MACHINERY,LTD. All rights reserved.
 *
 * @note        Tabstop=2
 * ----------------------------------------------------------------------------
 * DATE       VER.        DESCRIPTION                                    AUTHOR
 * ----------------------------------------------------------------------------
 * 2017/03/31 0.2         Step2_2リリース                                   CSC
 ******************************************************************************
 */
/**
 ******************************************************************************
 * @brief     ツリーコンポーネント
 * @param     {jQuery} containerDiv 格納先のdiv要素
 * @return
 * @retval
 * @attention
 * @note      ツリーコンポーネント
 * ----------------------------------------------------------------------------
 * VER.        DESCRIPTION                                               AUTHOR
 * ----------------------------------------------------------------------------
 ******************************************************************************
 */
var McsTree = function(containerDiv) {
  // コンストラクタ
  this.init(containerDiv);
};
// メソッド類
McsTree.prototype = {
  /**
   ******************************************************************************
   * @brief     初期化処理
   * @param     {jQuery} containerDiv 格納先のdiv要素
   * @return
   * @retval
   * @attention
   * @note      初期化処理
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  init: function(containerDiv) {
    this.containerDiv = containerDiv;
    this.containerDiv.addClass('mcs-tree');
  },

  /**
   ******************************************************************************
   * @brief     ツリーを生成する
   * @param     {Object} data ツリー要素のオブジェクト
   * @return
   * @retval
   * @attention
   * @note      サーバー側のTreeEntityの形式に従って要素を生成
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  setTree: function(data) {
    this.containerDiv.jstree({
      core: {
        themes: {
          'name': 'default-dark',
          'dots': true,
          'icons': false
        },
        data: data
      },
      plugins: ['checkbox']
    });
  },

  /**
   ******************************************************************************
   * @brief     チェックされた最下層の値を取得する
   * @return    {Array} チェックされた最下層ノードのIDの配列
   * @retval
   * @attention
   * @note      最下層ノード：子がいないノード
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  getValue: function() {
    var selectValue = [];
    var self = this;
    $.each(self.containerDiv.jstree('get_bottom_checked', true), function() {
      selectValue.push(this.id);
    });
    return selectValue;
  },

  /**
   ******************************************************************************
   * @brief     指定したIDのチェックボックスをオンにする
   * @param     {Array} id IDの配列
   * @return
   * @retval
   * @attention
   * @note      指定したIDのチェックボックスをオンにする
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  select: function(id) {
    this.containerDiv.jstree('check_node', id);
  },

  /**
   ******************************************************************************
   * @brief     指定したIDのチェックボックスをオンにする
   * @param     {Array} id IDの配列
   * @return
   * @retval
   * @attention
   * @note      selectを呼ぶ
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  setValue: function(id) {
    this.select(id);
  },

  /**
   ******************************************************************************
   * @brief     全てのチェックボックスをオンにする
   * @return
   * @retval
   * @attention
   * @note      全てのチェックボックスをオンにする
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  selectAll: function() {
    this.containerDiv.jstree('select_all');
  },

  /**
   ******************************************************************************
   * @brief     指定したIDのチェックボックスをオフにする
   * @param     {Array} id IDの配列
   * @return
   * @retval
   * @attention
   * @note      指定したIDのチェックボックスをオフにする
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  deselect: function(id) {
    this.containerDiv.jstree('deselect_node', id);
  },

  /**
   ******************************************************************************
   * @brief     全てのチェックボックスをオフにする
   * @return
   * @retval
   * @attention
   * @note      全てのチェックボックスをオフにする
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  deselectAll: function() {
    this.containerDiv.jstree('deselect_all');
  },

  /**
   ******************************************************************************
   * @brief      全てのチェックボックスをオフにする
   * @return
   * @retval
   * @attention
   * @note       deselectAllを呼ぶ
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  clear: function() {
    this.deselectAll();
  },

  /**
   ******************************************************************************
   * @brief     引数のIDと一致するノードを開く
   * @param     {Array} id IDの配列
   * @return
   * @retval
   * @attention
   * @note      引数のIDと一致するノードを開く
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  open: function(id) {
    if (Array.isArray(id)) {
      for (var i = 0; i < id.length; i++) {
        this.containerDiv.jstree('open_node', id[i]);
      }
    } else {
      this.containerDiv.jstree('open_node', id);
    }
  },

  /**
   ******************************************************************************
   * @brief      全てのノードを開く
   * @return
   * @retval
   * @attention
   * @note       全てのノードを開く
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  openAll: function() {
    this.containerDiv.jstree('open_all');
  },

  /**
   ******************************************************************************
   * @brief     引数のIDと一致するノードを閉じる
   * @param     {Array} id IDの配列
   * @return
   * @retval
   * @attention
   * @note      引数のIDと一致するノードを閉じる
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  close: function(id) {
    if (Array.isArray(id)) {
      for (var i = 0; i < id.length; i++) {
        this.containerDiv.jstree('close_node', id[i]);
      }
    } else {
      this.containerDiv.jstree('close_node', id);
    }
  },

  /**
   ******************************************************************************
   * @brief      全てのノードを閉じる
   * @return
   * @retval
   * @attention
   * @note       全てのノードを閉じる
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  closeAll: function() {
    this.containerDiv.jstree('close_all');
  },

  /**
   ******************************************************************************
   * @brief     指定のjQueryObjの配下にこの部品を追加する
   * @param     {jQueryObj} jQueryObj jQueryオブジェクト
   * @return    {McsTree} このコンポーネント
   * @retval
   * @attention
   * @note
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  appendTo: function(jQueryObj) {
    jQueryObj.append(this.containerDiv);
    return this;
  },

  /**
   ******************************************************************************
   * @brief エラー追加処理
   * @param {String} errorMessage エラーメッセージ
   * @return {McsTree} このコンポーネント
   * @retval
   * @attention
   * @note  エラーを追加する。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  addError: function(errorMessage) {
    var elm = $('<div class="mcs-component-errorText"></div>').text(errorMessage);
    this.containerDiv.append(elm);
    this.containerDiv.addClass('mcs-component-errorBack');
    return this;
  },

  /**
   ******************************************************************************
   * @brief エラークリア処理
   * @return {McsTree} このコンポーネント
   * @retval
   * @attention
   * @note  エラーをクリアする。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  clearError: function() {
    this.containerDiv.find('.mcs-component-errorText').remove();
    this.containerDiv.removeClass('mcs-component-errorBack');
    return this;
  },

  end: 'end'
};
