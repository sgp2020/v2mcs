/**
 ******************************************************************************
 * @file        mcs-CheckBox.js
 * @brief       チェックボックスに関する部品
 * @par
 * @author      CSC
 * $Id:         $
 * @attention
 *
 * Copyright (c) 2016 MURATA MACHINERY,LTD. All rights reserved.
 *
 * @note        Tabstop=2
 * ----------------------------------------------------------------------------
 * DATE       VER.        DESCRIPTION                                    AUTHOR
 * ----------------------------------------------------------------------------
 * 2016/12/26 0.1         Step1リリース                                     CSC
 ******************************************************************************
 */
/**
 ******************************************************************************
 * @brief     チェックボックスコンポーネント
 * @param     {jQuery} containerDiv 格納先のdiv要素
 * @param     {String} text         ラベルのテキスト
 * @param     {Object} attr         inputに追加適用する属性
 * @param     {Object} prop         inputに追加適用する属性
 * @return
 * @retval
 * @attention
 * @note      チェックボックスコンポーネント
 * ----------------------------------------------------------------------------
 * VER.        DESCRIPTION                                               AUTHOR
 * ----------------------------------------------------------------------------
 ******************************************************************************
 */
var McsCheckBox = function(containerDiv, text, attr, prop) {
  // コンストラクタ
  this.init(containerDiv, text, attr, prop);
};
// メソッド類
McsCheckBox.prototype = {
  /**
   ******************************************************************************
   * @brief     初期化処理
   * @param     {jQuery} containerDiv 格納先のdiv要素
   * @param     {String} text         ラベルのテキスト
   * @param     {Object} attr         inputに追加適用する属性
   * @param     {Object} prop         inputに追加適用する属性
   * @return
   * @retval
   * @attention
   * @note      初期化処理を実施する。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  init: function(containerDiv, text, attr, prop) {
    this.containerDiv = containerDiv;
    // 実際の要素を生成
    var input = $('<input type="checkbox" class="mcs-checkbox">');
    if (attr)
      input.attr(attr);
    if (prop)
      input.prop(prop);
    this.input = input;
    var label = $('<label class="mcs-checkbox-label"></label>');
    label.append(input);
    label.append(text);
    this.label = label;
    // containerDivに追加する
    containerDiv.append(label);
  },

  /**
   ******************************************************************************
   * @brief     チェック
   * @return    {McsCheckBox} このコンポーネント
   * @retval
   * @attention
   * @note      チェックボックスをチェック状態にする。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  check: function() {
    return this.setValue(true);
  },

  /**
   ******************************************************************************
   * @brief     チェック解除
   * @return    {McsCheckBox} このコンポーネント
   * @retval
   * @attention
   * @note      チェックを解除する。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  unCheck: function() {
    return this.setValue(false);
  },

  /**
   ******************************************************************************
   * @brief     値設定
   * @param     {Boolean} checked チェックする場合はtrue、外す場合はfalse
   * @return    {McsCheckBox} このコンポーネント
   * @retval
   * @attention
   * @note      値を設定する。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  setValue: function(checked) {
    this.input.prop('checked', checked);
    return this;
  },

  /**
   ******************************************************************************
   * @brief     値クリア
   * @return    {McsCheckBox} このコンポーネント
   * @retval
   * @attention
   * @note      チェック状態をクリアし、非チェック状態にする。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  clear: function() {
    return this.setValue(false);
  },

  /**
   ******************************************************************************
   * @brief     チェック状態取得
   * @return    {Boolean} チェックされていればtrue、されていなければfalse
   * @retval
   * @attention
   * @note      チェック状態かどうかを取得する。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  isChecked: function() {
    return this.input.prop('checked');
  },

  /**
   ******************************************************************************
   * @brief     値取得
   * @return    {Boolean} チェックされていればtrue、されていなければfalse
   * @retval
   * @attention
   * @note      値を取得する。isChecked と同じ動作となります。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  getValue: function() {
    return this.isChecked();
  },

  /**
   ******************************************************************************
   * @brief     クリック時イベント設定
   * @param     {Function} callback クリック時コールバック
   * @return    {McsCheckBox} このコンポーネント
   * @retval
   * @attention
   * @note      クリック時のコールバックを設定する。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  onClick: function(callback) {
    this.input.on('click', callback);
    return this;
  },

  /**
   ******************************************************************************
   * @brief     活性・非活性設定
   * @param     {Boolean} enabled 活性ならtrue、非活性ならfalse
   * @return    {McsCheckBox} このコンポーネント
   * @retval
   * @attention
   * @note      活性・非活性を設定する。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  setEnabled: function(enabled) {
    this.input.prop('disabled', !enabled);
    return this;
  },

  /**
   ******************************************************************************
   * @brief     活性・非活性取得
   * @return    {Boolean} 活性ならtrue、非活性ならfalse
   * @retval
   * @attention
   * @note      活性・非活性を取得する。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  getEnabled: function() {
    return !this.input.prop('disabled');
  },

  /**
   ******************************************************************************
   * @brief     エラー追加
   * @param     {String} errorMessage エラーメッセージ
   * @return
   * @retval
   * @attention
   * @note      エラーメッセージを追加する。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  addError: function(errorMessage) {
    var elm = $('<div class="mcs-component-errorText"></div>').text(errorMessage);
    this.containerDiv.append(elm);
    this.label.addClass('mcs-component-errorBack');
  },

  /**
   ******************************************************************************
   * @brief     エラー表示クリア
   * @return
   * @retval
   * @attention
   * @note      エラー表示をクリアする。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  clearError: function() {
    this.containerDiv.find('.mcs-component-errorText').remove();
    this.label.removeClass('mcs-component-errorBack');
  },

  /**
   ******************************************************************************
   * @brief         jQueryオブジェクト取得
   * @return        {jQueryObj} input要素
   * @retval
   * @attention    なるべく使用しないこと
   * @note          input要素のjQueryオブジェクトを返す。
   * ----------------------------------------------------------------------------
   * VER.        DESCRIPTION                                               AUTHOR
   * ----------------------------------------------------------------------------
   ******************************************************************************
   */
  getJq: function() {
    return this.input;
  },

  end: 'end' // 終端ダミー
};
